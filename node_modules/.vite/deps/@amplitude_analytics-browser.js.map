{
  "version": 3,
  "sources": ["../../@amplitude/analytics-core/src/messages.ts", "../../@amplitude/analytics-types/src/index.ts", "../../@amplitude/analytics-types/src/event.ts", "../../@amplitude/analytics-types/src/logger.ts", "../../@amplitude/analytics-types/src/server-zone.ts", "../../@amplitude/analytics-types/src/status.ts", "../../@amplitude/analytics-types/src/offline.ts", "../../@amplitude/analytics-core/src/utils/result-builder.ts", "../../@amplitude/analytics-core/src/utils/uuid.ts", "../../@amplitude/analytics-core/src/timeline.ts", "../../@amplitude/analytics-core/src/constants.ts", "../../@amplitude/analytics-core/src/utils/valid-properties.ts", "../../@amplitude/analytics-core/src/identify.ts", "../../@amplitude/analytics-core/src/utils/event-builder.ts", "../../@amplitude/analytics-core/src/utils/return-wrapper.ts", "../../@amplitude/analytics-core/src/core-client.ts", "../../@amplitude/analytics-core/src/revenue.ts", "../../@amplitude/analytics-core/src/utils/chunk.ts", "../../@amplitude/analytics-core/src/logger.ts", "../../@amplitude/analytics-core/src/config.ts", "../../@amplitude/analytics-core/src/plugins/destination.ts", "../../@amplitude/analytics-core/src/utils/debug.ts", "../../@amplitude/analytics-core/src/storage/memory.ts", "../../@amplitude/analytics-core/src/transports/base.ts", "../../@amplitude/analytics-client-common/src/global-scope.ts", "../../@amplitude/analytics-client-common/src/query-params.ts", "../../@amplitude/analytics-client-common/src/attribution/constants.ts", "../../@amplitude/analytics-client-common/src/attribution/campaign-parser.ts", "../../@amplitude/analytics-client-common/src/cookie-name.ts", "../../@amplitude/analytics-client-common/src/attribution/campaign-tracker.ts", "../../@amplitude/analytics-client-common/src/attribution/helpers.ts", "../../@amplitude/analytics-client-common/src/storage/helpers.ts", "../../@amplitude/analytics-client-common/src/session.ts", "../../@amplitude/analytics-client-common/src/attribution/web-attribution.ts", "../../@amplitude/analytics-client-common/src/storage/cookie.ts", "../../@amplitude/analytics-client-common/src/transports/fetch.ts", "../../@amplitude/analytics-connector/dist/analytics-connector.esm.js", "../../@amplitude/analytics-client-common/src/analytics-connector.ts", "../../@amplitude/analytics-client-common/src/plugins/identity.ts", "../../@amplitude/analytics-client-common/src/language.ts", "../../@amplitude/analytics-client-common/src/default-tracking.ts", "../../@amplitude/analytics-browser/src/utils/snippet-helper.ts", "../../@amplitude/analytics-browser/src/version.ts", "../../@amplitude/analytics-browser/src/plugins/context.ts", "../../@amplitude/analytics-browser/src/storage/browser-storage.ts", "../../@amplitude/analytics-browser/src/storage/local-storage.ts", "../../@amplitude/analytics-browser/src/storage/session-storage.ts", "../../@amplitude/analytics-browser/src/transports/xhr.ts", "../../@amplitude/analytics-browser/src/transports/send-beacon.ts", "../../@amplitude/analytics-browser/src/cookie-migration/index.ts", "../../@amplitude/analytics-browser/src/constants.ts", "../../@amplitude/analytics-browser/src/config.ts", "../../@amplitude/plugin-page-view-tracking-browser/src/utils.ts", "../../@amplitude/plugin-page-view-tracking-browser/src/page-view-tracking.ts", "../../@amplitude/analytics-browser/src/plugins/form-interaction-tracking.ts", "../../@amplitude/analytics-browser/src/plugins/file-download-tracking.ts", "../../@amplitude/analytics-browser/src/det-notification.ts", "../../@amplitude/analytics-browser/src/plugins/network-connectivity-checker.ts", "../../@amplitude/analytics-browser/src/browser-client.ts", "../../@amplitude/analytics-browser/src/browser-client-factory.ts", "../../@amplitude/analytics-browser/src/index.ts"],
  "sourcesContent": ["export const SUCCESS_MESSAGE = 'Event tracked successfully';\nexport const UNEXPECTED_ERROR_MESSAGE = 'Unexpected error occurred';\nexport const MAX_RETRIES_EXCEEDED_MESSAGE = 'Event rejected due to exceeded retry count';\nexport const OPT_OUT_MESSAGE = 'Event skipped due to optOut config';\nexport const MISSING_API_KEY_MESSAGE = 'Event rejected due to missing API key';\nexport const INVALID_API_KEY = 'Invalid API key';\nexport const CLIENT_NOT_INITIALIZED = 'Client not initialized';\n", "export { AmplitudeReturn } from './amplitude-promise';\nexport { BaseEvent, EventOptions } from './base-event';\nexport {\n  Campaign,\n  CampaignParser,\n  CampaignTracker,\n  CampaignTrackerOptions,\n  CampaignTrackFunction,\n  ClickIdParameters,\n  ReferrerParameters,\n  UTMParameters,\n} from './campaign';\nexport { BrowserClient, ReactNativeClient, NodeClient } from './client';\nexport {\n  AttributionOptions,\n  BrowserConfig,\n  BrowserOptions,\n  Config,\n  DefaultTrackingOptions,\n  Options,\n  NodeConfig,\n  NodeOptions,\n  ReactNativeConfig,\n  ReactNativeOptions,\n  ReactNativeTrackingOptions,\n  TrackingOptions,\n} from './config';\nexport { CoreClient } from './client/core-client';\nexport { DestinationContext } from './destination-context';\nexport {\n  Event,\n  TrackEvent,\n  IdentifyEvent,\n  GroupIdentifyEvent,\n  SpecialEventType,\n  IdentifyOperation,\n  IdentifyUserProperties,\n  ValidPropertyType,\n  Identify,\n  Revenue,\n  RevenueEvent,\n  RevenueProperty,\n  RevenueEventProperties,\n} from './event';\nexport { EventCallback } from './event-callback';\nexport { EventBridge, EventBridgeChannel, EventBridgeContainer, EventBridgeReceiver } from './event-bridge';\nexport { Logger, LogLevel, LogConfig, DebugContext } from './logger';\nexport { Payload } from './payload';\nexport { Plan } from './plan';\nexport { IngestionMetadata } from './ingestion-metadata';\nexport { Plugin, BeforePlugin, EnrichmentPlugin, DestinationPlugin, PluginType } from './plugin';\nexport { Result } from './result';\nexport { Response, SuccessResponse, InvalidResponse, PayloadTooLargeResponse, RateLimitResponse } from './response';\nexport { QueueProxy, InstanceProxy } from './proxy';\nexport { ServerZone, ServerZoneType } from './server-zone';\nexport { Status } from './status';\nexport { CookieStorageOptions, IdentityStorageType, Storage } from './storage';\nexport { Transport, TransportType } from './transport';\nexport { UserSession } from './user-session';\nexport { UTMData } from './utm';\nexport { PageTrackingOptions, PageTrackingTrackOn, PageTrackingHistoryChanges } from './page-view-tracking';\nexport { OfflineDisabled } from './offline';\n", "import { BaseEvent } from './base-event';\n\nexport interface Identify {\n  getUserProperties(): IdentifyUserProperties;\n  set(property: string, value: ValidPropertyType): Identify;\n  setOnce(property: string, value: ValidPropertyType): Identify;\n  append(property: string, value: ValidPropertyType): Identify;\n  prepend(property: string, value: ValidPropertyType): Identify;\n  postInsert(property: string, value: ValidPropertyType): Identify;\n  preInsert(property: string, value: ValidPropertyType): Identify;\n  remove(property: string, value: ValidPropertyType): Identify;\n  add(property: string, value: number): Identify;\n  unset(property: string): Identify;\n  clearAll(): Identify;\n}\n\nexport enum IdentifyOperation {\n  // Base Operations to set values\n  SET = '$set',\n  SET_ONCE = '$setOnce',\n\n  // Operations around modifying existing values\n  ADD = '$add',\n  APPEND = '$append',\n  PREPEND = '$prepend',\n  REMOVE = '$remove',\n\n  // Operations around appending values *if* they aren't present\n  PREINSERT = '$preInsert',\n  POSTINSERT = '$postInsert',\n\n  // Operations around removing properties/values\n  UNSET = '$unset',\n  CLEAR_ALL = '$clearAll',\n}\n\nexport type ValidPropertyType =\n  | number\n  | string\n  | boolean\n  | Array<string | number>\n  | { [key: string]: ValidPropertyType };\n\ninterface BaseOperationConfig {\n  [key: string]: ValidPropertyType;\n}\n\nexport interface IdentifyUserProperties {\n  // Add operations can only take numbers\n  [IdentifyOperation.ADD]?: { [key: string]: number };\n\n  // This reads the keys of the passed object, but the values are not used\n  [IdentifyOperation.UNSET]?: BaseOperationConfig;\n  // This option does not read the key as it unsets all user properties\n  [IdentifyOperation.CLEAR_ALL]?: any;\n\n  // These operations can take numbers, strings, or arrays of both.\n  [IdentifyOperation.SET]?: BaseOperationConfig;\n  [IdentifyOperation.SET_ONCE]?: BaseOperationConfig;\n  [IdentifyOperation.APPEND]?: BaseOperationConfig;\n  [IdentifyOperation.PREPEND]?: BaseOperationConfig;\n  [IdentifyOperation.POSTINSERT]?: BaseOperationConfig;\n  [IdentifyOperation.PREINSERT]?: BaseOperationConfig;\n  [IdentifyOperation.REMOVE]?: BaseOperationConfig;\n}\n\nexport type UserProperties =\n  | IdentifyUserProperties\n  | {\n      [key in Exclude<string, IdentifyOperation>]: any;\n    };\n\nexport interface Revenue {\n  getEventProperties(): RevenueEventProperties;\n  setProductId(productId: string): Revenue;\n  setQuantity(quantity: number): Revenue;\n  setPrice(price: number): Revenue;\n  setRevenueType(revenueType: string): Revenue;\n  setEventProperties(properties: { [key: string]: any }): Revenue;\n  setRevenue(revenue: number): Revenue;\n}\n\nexport enum RevenueProperty {\n  REVENUE_PRODUCT_ID = '$productId',\n  REVENUE_QUANTITY = '$quantity',\n  REVENUE_PRICE = '$price',\n  REVENUE_TYPE = '$revenueType',\n  REVENUE = '$revenue',\n}\n\nexport interface RevenueEventProperties {\n  [RevenueProperty.REVENUE_PRODUCT_ID]?: string;\n  [RevenueProperty.REVENUE_QUANTITY]?: number;\n  [RevenueProperty.REVENUE_PRICE]?: number;\n  [RevenueProperty.REVENUE_TYPE]?: string;\n  [RevenueProperty.REVENUE_TYPE]?: string;\n  [RevenueProperty.REVENUE]?: number;\n}\n\n/**\n * Strings that have special meaning when used as an event's type\n * and have different specifications.\n */\nexport enum SpecialEventType {\n  IDENTIFY = '$identify',\n  GROUP_IDENTIFY = '$groupidentify',\n  REVENUE = 'revenue_amount',\n}\n\nexport interface TrackEvent extends BaseEvent {\n  event_type: Exclude<string, SpecialEventType>;\n}\n\nexport interface IdentifyEvent extends BaseEvent {\n  event_type: SpecialEventType.IDENTIFY;\n  user_properties: UserProperties;\n}\n\nexport interface GroupIdentifyEvent extends BaseEvent {\n  event_type: SpecialEventType.GROUP_IDENTIFY;\n  group_properties: UserProperties;\n}\n\nexport interface RevenueEvent extends BaseEvent {\n  event_type: SpecialEventType.REVENUE;\n  event_properties:\n    | RevenueEventProperties\n    | {\n        [key: string]: any;\n      };\n}\n\nexport type Event = TrackEvent | IdentifyEvent | GroupIdentifyEvent | RevenueEvent;\n", "export interface Logger {\n  disable(): void;\n  enable(logLevel: LogLevel): void;\n  log(...args: any[]): void;\n  warn(...args: any[]): void;\n  error(...args: any[]): void;\n  debug(...args: any[]): void;\n}\n\nexport enum LogLevel {\n  None = 0,\n  Error = 1,\n  Warn = 2,\n  Verbose = 3,\n  Debug = 4,\n}\n\nexport interface LogConfig {\n  logger: Logger;\n  logLevel: LogLevel;\n}\n\ntype TimeKey = 'start' | 'end';\n\nexport interface DebugContext {\n  type: string;\n  name: string;\n  args: string[] | string;\n  stacktrace?: string[] | string;\n  time?: { [key in TimeKey]?: string };\n  states?: { [key: string]: any };\n}\n", "/**\n * @deprecated use ServerZoneType instead\n */\nexport enum ServerZone {\n  US = 'US',\n  EU = 'EU',\n}\n\nexport type ServerZoneType = 'US' | 'EU';\n", "/** The status of an event. */\nexport enum Status {\n  /** The status could not be determined. */\n  Unknown = 'unknown',\n  /** The event was skipped due to configuration or callbacks. */\n  Skipped = 'skipped',\n  /** The event was sent successfully. */\n  Success = 'success',\n  /** A user or device in the payload is currently rate limited and should try again later. */\n  RateLimit = 'rate_limit',\n  /** The sent payload was too large to be processed. */\n  PayloadTooLarge = 'payload_too_large',\n  /** The event could not be processed. */\n  Invalid = 'invalid',\n  /** A server-side error ocurred during submission. */\n  Failed = 'failed',\n  /** a server or client side error occuring when a request takes too long and is cancelled */\n  Timeout = 'Timeout',\n  /** NodeJS runtime environment error.. E.g. disconnected from network */\n  SystemError = 'SystemError',\n}\n", "export const OfflineDisabled = null;\n", "import { Event, Result, Status } from '@amplitude/analytics-types';\n\nexport const buildResult = (event: Event, code = 0, message: string = Status.Unknown): Result => {\n  return { event, code, message };\n};\n", "/**\n * Source: [jed's gist]{@link https://gist.github.com/982883}.\n * Returns a random v4 UUID of the form xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx,\n * where each x is replaced with a random hexadecimal digit from 0 to f, and\n * y is replaced with a random hexadecimal digit from 8 to b.\n * Used to generate UUIDs for deviceIds.\n * @private\n */\nexport const UUID = function (a?: any): string {\n  return a // if the placeholder was passed, return\n    ? // a random number from 0 to 15\n      (\n        a ^ // unless b is 8,\n        ((Math.random() * // in which case\n          16) >> // a random number from\n          (a / 4))\n      ) // 8 to 11\n        .toString(16) // in hexadecimal\n    : // or otherwise a concatenated string:\n      (\n        String(1e7) + // 10000000 +\n        String(-1e3) + // -1000 +\n        String(-4e3) + // -4000 +\n        String(-8e3) + // -80000000 +\n        String(-1e11)\n      ) // -100000000000,\n        .replace(\n          // replacing\n          /[018]/g, // zeroes, ones, and eights with\n          UUID, // random hex digits\n        );\n};\n", "import {\n  BeforePlugin,\n  Config,\n  CoreClient,\n  DestinationPlugin,\n  EnrichmentPlugin,\n  Event,\n  EventCallback,\n  Plugin,\n  Result,\n} from '@amplitude/analytics-types';\nimport { buildResult } from './utils/result-builder';\nimport { UUID } from './utils/uuid';\n\nexport class Timeline {\n  queue: [Event, EventCallback][] = [];\n  // Flag to guarantee one schedule apply is running\n  applying = false;\n  // Flag indicates whether timeline is ready to process event\n  // Events collected before timeline is ready will stay in the queue to be processed later\n  plugins: Plugin[] = [];\n\n  constructor(private client: CoreClient) {}\n\n  async register(plugin: Plugin, config: Config) {\n    plugin.name = plugin.name ?? UUID();\n    plugin.type = plugin.type ?? 'enrichment';\n    await plugin.setup?.(config, this.client);\n    this.plugins.push(plugin);\n  }\n\n  async deregister(pluginName: string) {\n    const index = this.plugins.findIndex((plugin) => plugin.name === pluginName);\n    const plugin = this.plugins[index];\n    this.plugins.splice(index, 1);\n    await plugin.teardown?.();\n  }\n\n  reset(client: CoreClient) {\n    this.applying = false;\n    const plugins = this.plugins;\n    plugins.map((plugin) => plugin.teardown?.());\n    this.plugins = [];\n    this.client = client;\n  }\n\n  push(event: Event) {\n    return new Promise<Result>((resolve) => {\n      this.queue.push([event, resolve]);\n      this.scheduleApply(0);\n    });\n  }\n\n  scheduleApply(timeout: number) {\n    if (this.applying) return;\n    this.applying = true;\n    setTimeout(() => {\n      void this.apply(this.queue.shift()).then(() => {\n        this.applying = false;\n        if (this.queue.length > 0) {\n          this.scheduleApply(0);\n        }\n      });\n    }, timeout);\n  }\n\n  async apply(item: [Event, EventCallback] | undefined) {\n    if (!item) {\n      return;\n    }\n\n    let [event] = item;\n    const [, resolve] = item;\n\n    const before = this.plugins.filter<BeforePlugin>(\n      (plugin: Plugin): plugin is BeforePlugin => plugin.type === 'before',\n    );\n\n    for (const plugin of before) {\n      /* istanbul ignore if */\n      if (!plugin.execute) {\n        // do nothing\n        continue;\n      }\n      const e = await plugin.execute({ ...event });\n      if (e === null) {\n        resolve({ event, code: 0, message: '' });\n        return;\n      } else {\n        event = e;\n      }\n    }\n\n    const enrichment = this.plugins.filter<EnrichmentPlugin>(\n      (plugin: Plugin): plugin is EnrichmentPlugin => plugin.type === 'enrichment' || plugin.type === undefined,\n    );\n\n    for (const plugin of enrichment) {\n      /* istanbul ignore if */\n      if (!plugin.execute) {\n        // do nothing\n        continue;\n      }\n      const e = await plugin.execute({ ...event });\n      if (e === null) {\n        resolve({ event, code: 0, message: '' });\n        return;\n      } else {\n        event = e;\n      }\n    }\n\n    const destination = this.plugins.filter<DestinationPlugin>(\n      (plugin: Plugin): plugin is DestinationPlugin => plugin.type === 'destination',\n    );\n\n    const executeDestinations = destination.map((plugin) => {\n      const eventClone = { ...event };\n      return plugin.execute(eventClone).catch((e) => buildResult(eventClone, 0, String(e)));\n    });\n\n    void Promise.all(executeDestinations).then(([result]) => {\n      const resolveResult =\n        result || buildResult(event, 100, 'Event not tracked, no destination plugins on the instance');\n      resolve(resolveResult);\n    });\n\n    return;\n  }\n\n  async flush() {\n    const queue = this.queue;\n    this.queue = [];\n\n    await Promise.all(queue.map((item) => this.apply(item)));\n\n    const destination = this.plugins.filter<DestinationPlugin>(\n      (plugin: Plugin): plugin is DestinationPlugin => plugin.type === 'destination',\n    );\n\n    const executeDestinations = destination.map((plugin) => {\n      return plugin.flush && plugin.flush();\n    });\n\n    await Promise.all(executeDestinations);\n  }\n}\n", "export const UNSET_VALUE = '-';\nexport const AMPLITUDE_PREFIX = 'AMP';\nexport const STORAGE_PREFIX = `${AMPLITUDE_PREFIX}_unsent`;\nexport const AMPLITUDE_SERVER_URL = 'https://api2.amplitude.com/2/httpapi';\nexport const EU_AMPLITUDE_SERVER_URL = 'https://api.eu.amplitude.com/2/httpapi';\nexport const AMPLITUDE_BATCH_SERVER_URL = 'https://api2.amplitude.com/batch';\nexport const EU_AMPLITUDE_BATCH_SERVER_URL = 'https://api.eu.amplitude.com/batch';\n", "const MAX_PROPERTY_KEYS = 1000;\n\nexport const isValidObject = (properties: { [key: string]: any }): boolean => {\n  if (Object.keys(properties).length > MAX_PROPERTY_KEYS) {\n    return false;\n  }\n  for (const key in properties) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const value = properties[key];\n    if (!isValidProperties(key, value)) return false;\n  }\n  return true;\n};\n\nexport const isValidProperties = (property: string, value: any): boolean => {\n  if (typeof property !== 'string') return false;\n  if (Array.isArray(value)) {\n    let isValid = true;\n    for (const valueElement of value) {\n      if (Array.isArray(valueElement)) {\n        return false;\n      } else if (typeof valueElement === 'object') {\n        isValid = isValid && isValidObject(valueElement as object);\n      } else if (!['number', 'string'].includes(typeof valueElement)) {\n        return false;\n      }\n      if (!isValid) {\n        return false;\n      }\n    }\n  } else if (value === null || value === undefined) {\n    return false;\n  } else if (typeof value === 'object') {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    return isValidObject(value);\n  } else if (!['number', 'string', 'boolean'].includes(typeof value)) {\n    return false;\n  }\n  return true;\n};\n", "import {\n  IdentifyOperation,\n  IdentifyUserProperties,\n  ValidPropertyType,\n  Identify as IIdentify,\n} from '@amplitude/analytics-types';\nimport { UNSET_VALUE } from './constants';\nimport { isValidProperties } from './utils/valid-properties';\n\nexport class Identify implements IIdentify {\n  protected readonly _propertySet: Set<string> = new Set<string>();\n  protected _properties: IdentifyUserProperties = {};\n\n  public getUserProperties(): IdentifyUserProperties {\n    return { ...this._properties };\n  }\n\n  public set(property: string, value: ValidPropertyType): Identify {\n    this._safeSet(IdentifyOperation.SET, property, value);\n    return this;\n  }\n\n  public setOnce(property: string, value: ValidPropertyType): Identify {\n    this._safeSet(IdentifyOperation.SET_ONCE, property, value);\n    return this;\n  }\n\n  public append(property: string, value: ValidPropertyType): Identify {\n    this._safeSet(IdentifyOperation.APPEND, property, value);\n    return this;\n  }\n\n  public prepend(property: string, value: ValidPropertyType): Identify {\n    this._safeSet(IdentifyOperation.PREPEND, property, value);\n    return this;\n  }\n\n  public postInsert(property: string, value: ValidPropertyType): Identify {\n    this._safeSet(IdentifyOperation.POSTINSERT, property, value);\n    return this;\n  }\n\n  public preInsert(property: string, value: ValidPropertyType): Identify {\n    this._safeSet(IdentifyOperation.PREINSERT, property, value);\n    return this;\n  }\n\n  public remove(property: string, value: ValidPropertyType): Identify {\n    this._safeSet(IdentifyOperation.REMOVE, property, value);\n    return this;\n  }\n\n  public add(property: string, value: number): Identify {\n    this._safeSet(IdentifyOperation.ADD, property, value);\n    return this;\n  }\n\n  public unset(property: string): Identify {\n    this._safeSet(IdentifyOperation.UNSET, property, UNSET_VALUE);\n    return this;\n  }\n\n  public clearAll(): Identify {\n    // When clear all happens, all properties are unset. Reset the entire object.\n    this._properties = {};\n    this._properties[IdentifyOperation.CLEAR_ALL] = UNSET_VALUE;\n\n    return this;\n  }\n\n  // Returns whether or not this set actually worked.\n  private _safeSet(operation: IdentifyOperation, property: string, value: ValidPropertyType): boolean {\n    if (this._validate(operation, property, value)) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      let userPropertyMap: any = this._properties[operation];\n      if (userPropertyMap === undefined) {\n        userPropertyMap = {};\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        this._properties[operation] = userPropertyMap;\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      userPropertyMap[property] = value;\n      this._propertySet.add(property);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _validate(operation: IdentifyOperation, property: string, value: ValidPropertyType): boolean {\n    if (this._properties[IdentifyOperation.CLEAR_ALL] !== undefined) {\n      // clear all already set. Skipping operation;\n      return false;\n    }\n\n    if (this._propertySet.has(property)) {\n      // Property already used. Skipping operation\n      return false;\n    }\n\n    if (operation === IdentifyOperation.ADD) {\n      return typeof value === 'number';\n    }\n\n    if (operation !== IdentifyOperation.UNSET && operation !== IdentifyOperation.REMOVE) {\n      return isValidProperties(property, value);\n    }\n    return true;\n  }\n}\n", "import {\n  BaseEvent,\n  TrackEvent,\n  IdentifyEvent,\n  GroupIdentifyEvent,\n  SpecialEventType,\n  Identify as IIdentify,\n  Revenue,\n  RevenueEvent,\n  EventOptions,\n} from '@amplitude/analytics-types';\nimport { Identify } from '../identify';\n\nexport const createTrackEvent = (\n  eventInput: BaseEvent | string,\n  eventProperties?: Record<string, any>,\n  eventOptions?: EventOptions,\n): TrackEvent => {\n  const baseEvent: BaseEvent = typeof eventInput === 'string' ? { event_type: eventInput } : eventInput;\n  return {\n    ...baseEvent,\n    ...eventOptions,\n    ...(eventProperties && { event_properties: eventProperties }),\n  };\n};\n\nexport const createIdentifyEvent = (identify: IIdentify, eventOptions?: EventOptions): IdentifyEvent => {\n  const identifyEvent: IdentifyEvent = {\n    ...eventOptions,\n    event_type: SpecialEventType.IDENTIFY,\n    user_properties: identify.getUserProperties(),\n  };\n\n  return identifyEvent;\n};\n\nexport const createGroupIdentifyEvent = (\n  groupType: string,\n  groupName: string | string[],\n  identify: IIdentify,\n  eventOptions?: EventOptions,\n): GroupIdentifyEvent => {\n  const groupIdentify: GroupIdentifyEvent = {\n    ...eventOptions,\n    event_type: SpecialEventType.GROUP_IDENTIFY,\n    group_properties: identify.getUserProperties(),\n    groups: {\n      [groupType]: groupName,\n    },\n  };\n\n  return groupIdentify;\n};\n\nexport const createGroupEvent = (groupType: string, groupName: string | string[], eventOptions?: EventOptions) => {\n  const identify = new Identify();\n  identify.set(groupType, groupName);\n\n  const groupEvent: IdentifyEvent = {\n    ...eventOptions,\n    event_type: SpecialEventType.IDENTIFY,\n    user_properties: identify.getUserProperties(),\n    groups: {\n      [groupType]: groupName,\n    },\n  };\n  return groupEvent;\n};\n\nexport const createRevenueEvent = (revenue: Revenue, eventOptions?: EventOptions): RevenueEvent => {\n  return {\n    ...eventOptions,\n    event_type: SpecialEventType.REVENUE,\n    event_properties: revenue.getEventProperties(),\n  };\n};\n", "import { AmplitudeReturn } from '@amplitude/analytics-types';\n\nexport const returnWrapper: {\n  (): AmplitudeReturn<void>;\n  <T>(awaitable: Promise<T>): AmplitudeReturn<T>;\n} = <T>(awaitable?: Promise<T>) => ({\n  promise: awaitable || Promise.resolve(),\n});\n", "import {\n  BaseEvent,\n  Config,\n  CoreClient,\n  Event,\n  EventOptions,\n  Identify,\n  Plugin,\n  Result,\n  Revenue,\n} from '@amplitude/analytics-types';\nimport { CLIENT_NOT_INITIALIZED, OPT_OUT_MESSAGE } from './messages';\nimport { Timeline } from './timeline';\nimport {\n  createGroupEvent,\n  createGroupIdentifyEvent,\n  createIdentifyEvent,\n  createRevenueEvent,\n  createTrackEvent,\n} from './utils/event-builder';\nimport { buildResult } from './utils/result-builder';\nimport { returnWrapper } from './utils/return-wrapper';\n\nexport class AmplitudeCore implements CoreClient {\n  protected initializing = false;\n  protected name: string;\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  config: Config;\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  timeline: Timeline;\n  isReady = false;\n  protected q: Array<CallableFunction | typeof returnWrapper> = [];\n  protected dispatchQ: Array<CallableFunction> = [];\n\n  constructor(name = '$default') {\n    this.timeline = new Timeline(this);\n    this.name = name;\n  }\n\n  protected async _init(config: Config) {\n    this.config = config;\n    this.timeline.reset(this);\n    await this.runQueuedFunctions('q');\n    this.isReady = true;\n  }\n\n  async runQueuedFunctions(queueName: 'q' | 'dispatchQ') {\n    const queuedFunctions = this[queueName];\n    this[queueName] = [];\n    for (const queuedFunction of queuedFunctions) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      const val: ReturnType<typeof returnWrapper> | Promise<any> = queuedFunction();\n      if (val && 'promise' in val) {\n        await val.promise;\n      } else {\n        await val;\n      }\n    }\n    // Rerun queued functions if the queue has accrued more while awaiting promises\n    if (this[queueName].length) {\n      await this.runQueuedFunctions(queueName);\n    }\n  }\n\n  track(eventInput: BaseEvent | string, eventProperties?: Record<string, any>, eventOptions?: EventOptions) {\n    const event = createTrackEvent(eventInput, eventProperties, eventOptions);\n    return returnWrapper(this.dispatch(event));\n  }\n\n  logEvent = this.track.bind(this);\n\n  identify(identify: Identify, eventOptions?: EventOptions) {\n    const event = createIdentifyEvent(identify, eventOptions);\n    return returnWrapper(this.dispatch(event));\n  }\n\n  groupIdentify(groupType: string, groupName: string | string[], identify: Identify, eventOptions?: EventOptions) {\n    const event = createGroupIdentifyEvent(groupType, groupName, identify, eventOptions);\n    return returnWrapper(this.dispatch(event));\n  }\n\n  setGroup(groupType: string, groupName: string | string[], eventOptions?: EventOptions) {\n    const event = createGroupEvent(groupType, groupName, eventOptions);\n    return returnWrapper(this.dispatch(event));\n  }\n\n  revenue(revenue: Revenue, eventOptions?: EventOptions) {\n    const event = createRevenueEvent(revenue, eventOptions);\n    return returnWrapper(this.dispatch(event));\n  }\n\n  add(plugin: Plugin) {\n    if (!this.isReady) {\n      this.q.push(this._addPlugin.bind(this, plugin));\n      return returnWrapper();\n    }\n    return this._addPlugin(plugin);\n  }\n\n  _addPlugin(plugin: Plugin) {\n    return returnWrapper(this.timeline.register(plugin, this.config));\n  }\n\n  remove(pluginName: string) {\n    if (!this.isReady) {\n      this.q.push(this._removePlugin.bind(this, pluginName));\n      return returnWrapper();\n    }\n    return this._removePlugin(pluginName);\n  }\n\n  _removePlugin(pluginName: string) {\n    return returnWrapper(this.timeline.deregister(pluginName));\n  }\n\n  dispatchWithCallback(event: Event, callback: (result: Result) => void): void {\n    if (!this.isReady) {\n      return callback(buildResult(event, 0, CLIENT_NOT_INITIALIZED));\n    }\n    void this.process(event).then(callback);\n  }\n\n  async dispatch(event: Event): Promise<Result> {\n    if (!this.isReady) {\n      return new Promise<Result>((resolve) => {\n        this.dispatchQ.push(this.dispatchWithCallback.bind(this, event, resolve));\n      });\n    }\n\n    return this.process(event);\n  }\n\n  async process(event: Event): Promise<Result> {\n    try {\n      // skip event processing if opt out\n      if (this.config.optOut) {\n        return buildResult(event, 0, OPT_OUT_MESSAGE);\n      }\n\n      const result = await this.timeline.push(event);\n\n      result.code === 200\n        ? this.config.loggerProvider.log(result.message)\n        : result.code === 100\n        ? this.config.loggerProvider.warn(result.message)\n        : this.config.loggerProvider.error(result.message);\n\n      return result;\n    } catch (e) {\n      const message = String(e);\n      this.config.loggerProvider.error(message);\n      const result = buildResult(event, 0, message);\n\n      return result;\n    }\n  }\n\n  setOptOut(optOut: boolean) {\n    if (!this.isReady) {\n      this.q.push(this._setOptOut.bind(this, Boolean(optOut)));\n      return;\n    }\n    this._setOptOut(optOut);\n  }\n\n  _setOptOut(optOut: boolean) {\n    this.config.optOut = Boolean(optOut);\n  }\n\n  flush() {\n    return returnWrapper(this.timeline.flush());\n  }\n}\n", "import {\n  RevenueProperty,\n  RevenueEventProperties,\n  Revenue as IRevenue,\n  ValidPropertyType,\n} from '@amplitude/analytics-types';\nimport { isValidObject } from './utils/valid-properties';\n\nexport class Revenue implements IRevenue {\n  private productId: string;\n  private quantity: number;\n  private price: number;\n  private revenueType?: string;\n  private properties?: { [key: string]: any };\n  private revenue?: number;\n\n  constructor() {\n    this.productId = '';\n    this.quantity = 1;\n    this.price = 0.0;\n  }\n\n  setProductId(productId: string) {\n    this.productId = productId;\n    return this;\n  }\n\n  setQuantity(quantity: number) {\n    if (quantity > 0) {\n      this.quantity = quantity;\n    }\n    return this;\n  }\n\n  setPrice(price: number) {\n    this.price = price;\n    return this;\n  }\n\n  setRevenueType(revenueType: string) {\n    this.revenueType = revenueType;\n    return this;\n  }\n\n  setRevenue(revenue: number) {\n    this.revenue = revenue;\n    return this;\n  }\n\n  setEventProperties(properties: { [key: string]: ValidPropertyType }) {\n    if (isValidObject(properties)) {\n      this.properties = properties;\n    }\n    return this;\n  }\n\n  getEventProperties(): RevenueEventProperties {\n    const eventProperties: RevenueEventProperties = this.properties ? { ...this.properties } : {};\n    eventProperties[RevenueProperty.REVENUE_PRODUCT_ID] = this.productId;\n    eventProperties[RevenueProperty.REVENUE_QUANTITY] = this.quantity;\n    eventProperties[RevenueProperty.REVENUE_PRICE] = this.price;\n    eventProperties[RevenueProperty.REVENUE_TYPE] = this.revenueType;\n    eventProperties[RevenueProperty.REVENUE] = this.revenue;\n    return eventProperties;\n  }\n}\n", "// Creates an array of elements split into groups the length of size.\n// If array can't be split evenly, the final chunk will be the remaining elements.\n// Works similary as https://lodash.com/docs/4.17.15#chunk\n\nexport const chunk = <T>(arr: T[], size: number) => {\n  const chunkSize = Math.max(size, 1);\n  return arr.reduce<T[][]>((chunks, element, index) => {\n    const chunkIndex = Math.floor(index / chunkSize);\n    if (!chunks[chunkIndex]) {\n      chunks[chunkIndex] = [];\n    }\n    chunks[chunkIndex].push(element);\n    return chunks;\n  }, []);\n};\n", "import { LogLevel, Logger as ILogger } from '@amplitude/analytics-types';\n\nconst PREFIX = 'Amplitude Logger ';\n\nexport class Logger implements ILogger {\n  logLevel: LogLevel;\n\n  constructor() {\n    this.logLevel = LogLevel.None;\n  }\n\n  disable(): void {\n    this.logLevel = LogLevel.None;\n  }\n\n  enable(logLevel: LogLevel = LogLevel.Warn): void {\n    this.logLevel = logLevel;\n  }\n\n  log(...args: any[]): void {\n    if (this.logLevel < LogLevel.Verbose) {\n      return;\n    }\n    console.log(`${PREFIX}[Log]: ${args.join(' ')}`);\n  }\n\n  warn(...args: any[]): void {\n    if (this.logLevel < LogLevel.Warn) {\n      return;\n    }\n    console.warn(`${PREFIX}[Warn]: ${args.join(' ')}`);\n  }\n\n  error(...args: any[]): void {\n    if (this.logLevel < LogLevel.Error) {\n      return;\n    }\n    console.error(`${PREFIX}[Error]: ${args.join(' ')}`);\n  }\n\n  debug(...args: any[]): void {\n    if (this.logLevel < LogLevel.Debug) {\n      return;\n    }\n    // console.debug output is hidden by default in chrome\n    console.log(`${PREFIX}[Debug]: ${args.join(' ')}`);\n  }\n}\n", "import {\n  Event,\n  Config as IConfig,\n  Logger as ILogger,\n  LogLevel,\n  Storage,\n  Transport,\n  Plan,\n  IngestionMetadata,\n  Options,\n  ServerZoneType,\n  OfflineDisabled,\n} from '@amplitude/analytics-types';\nimport {\n  AMPLITUDE_SERVER_URL,\n  AMPLITUDE_BATCH_SERVER_URL,\n  EU_AMPLITUDE_SERVER_URL,\n  EU_AMPLITUDE_BATCH_SERVER_URL,\n} from './constants';\n\nimport { Logger } from './logger';\n\nexport const getDefaultConfig = () => ({\n  flushMaxRetries: 12,\n  flushQueueSize: 200,\n  flushIntervalMillis: 10000,\n  instanceName: '$default_instance',\n  logLevel: LogLevel.Warn,\n  loggerProvider: new Logger(),\n  offline: false,\n  optOut: false,\n  serverUrl: AMPLITUDE_SERVER_URL,\n  serverZone: 'US' as ServerZoneType,\n  useBatch: false,\n});\n\nexport class Config implements IConfig {\n  apiKey: string;\n  flushIntervalMillis: number;\n  flushMaxRetries: number;\n  flushQueueSize: number;\n  instanceName?: string;\n  loggerProvider: ILogger;\n  logLevel: LogLevel;\n  minIdLength?: number;\n  offline?: boolean | typeof OfflineDisabled;\n  plan?: Plan;\n  ingestionMetadata?: IngestionMetadata;\n  serverUrl: string | undefined;\n  serverZone?: ServerZoneType;\n  transportProvider: Transport;\n  storageProvider?: Storage<Event[]>;\n  useBatch: boolean;\n\n  protected _optOut = false;\n  get optOut() {\n    return this._optOut;\n  }\n  set optOut(optOut: boolean) {\n    this._optOut = optOut;\n  }\n\n  constructor(options: Options) {\n    const defaultConfig = getDefaultConfig();\n    this.apiKey = options.apiKey;\n    this.flushIntervalMillis = options.flushIntervalMillis ?? defaultConfig.flushIntervalMillis;\n    this.flushMaxRetries = options.flushMaxRetries || defaultConfig.flushMaxRetries;\n    this.flushQueueSize = options.flushQueueSize || defaultConfig.flushQueueSize;\n    this.instanceName = options.instanceName || defaultConfig.instanceName;\n    this.loggerProvider = options.loggerProvider || defaultConfig.loggerProvider;\n    this.logLevel = options.logLevel ?? defaultConfig.logLevel;\n    this.minIdLength = options.minIdLength;\n    this.plan = options.plan;\n    this.ingestionMetadata = options.ingestionMetadata;\n    this.offline = options.offline !== undefined ? options.offline : defaultConfig.offline;\n    this.optOut = options.optOut ?? defaultConfig.optOut;\n    this.serverUrl = options.serverUrl;\n    this.serverZone = options.serverZone || defaultConfig.serverZone;\n    this.storageProvider = options.storageProvider;\n    this.transportProvider = options.transportProvider;\n    this.useBatch = options.useBatch ?? defaultConfig.useBatch;\n    this.loggerProvider.enable(this.logLevel);\n\n    const serverConfig = createServerConfig(options.serverUrl, options.serverZone, options.useBatch);\n    this.serverZone = serverConfig.serverZone;\n    this.serverUrl = serverConfig.serverUrl;\n  }\n}\n\nexport const getServerUrl = (serverZone: ServerZoneType, useBatch: boolean) => {\n  if (serverZone === 'EU') {\n    return useBatch ? EU_AMPLITUDE_BATCH_SERVER_URL : EU_AMPLITUDE_SERVER_URL;\n  }\n  return useBatch ? AMPLITUDE_BATCH_SERVER_URL : AMPLITUDE_SERVER_URL;\n};\n\nexport const createServerConfig = (\n  serverUrl = '',\n  serverZone: ServerZoneType = getDefaultConfig().serverZone,\n  useBatch: boolean = getDefaultConfig().useBatch,\n) => {\n  if (serverUrl) {\n    return { serverUrl, serverZone: undefined };\n  }\n  const _serverZone = ['US', 'EU'].includes(serverZone) ? serverZone : getDefaultConfig().serverZone;\n  return {\n    serverZone: _serverZone,\n    serverUrl: getServerUrl(_serverZone, useBatch),\n  };\n};\n", "import {\n  Config,\n  DestinationContext as Context,\n  DestinationPlugin,\n  Event,\n  InvalidResponse,\n  PayloadTooLargeResponse,\n  RateLimitResponse,\n  Response,\n  Result,\n  Status,\n  SuccessResponse,\n} from '@amplitude/analytics-types';\nimport {\n  INVALID_API_KEY,\n  MAX_RETRIES_EXCEEDED_MESSAGE,\n  MISSING_API_KEY_MESSAGE,\n  SUCCESS_MESSAGE,\n  UNEXPECTED_ERROR_MESSAGE,\n} from '../messages';\nimport { STORAGE_PREFIX } from '../constants';\nimport { chunk } from '../utils/chunk';\nimport { buildResult } from '../utils/result-builder';\nimport { createServerConfig } from '../config';\nimport { UUID } from '../utils/uuid';\n\nfunction getErrorMessage(error: unknown) {\n  if (error instanceof Error) return error.message;\n  return String(error);\n}\n\nexport function getResponseBodyString(res: Response) {\n  let responseBodyString = '';\n  try {\n    if ('body' in res) {\n      responseBodyString = JSON.stringify(res.body, null, 2);\n    }\n  } catch {\n    // to avoid crash, but don't care about the error, add comment to avoid empty block lint error\n  }\n  return responseBodyString;\n}\n\nexport class Destination implements DestinationPlugin {\n  name = 'amplitude';\n  type = 'destination' as const;\n\n  retryTimeout = 1000;\n  throttleTimeout = 30000;\n  storageKey = '';\n  // this.config is defined in setup() which will always be called first\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  config: Config;\n  private scheduled: ReturnType<typeof setTimeout> | null = null;\n  queue: Context[] = [];\n\n  async setup(config: Config): Promise<undefined> {\n    this.config = config;\n\n    this.storageKey = `${STORAGE_PREFIX}_${this.config.apiKey.substring(0, 10)}`;\n    const unsent = await this.config.storageProvider?.get(this.storageKey);\n    if (unsent && unsent.length > 0) {\n      void Promise.all(unsent.map((event) => this.execute(event))).catch();\n    }\n\n    return Promise.resolve(undefined);\n  }\n\n  execute(event: Event): Promise<Result> {\n    // Assign insert_id for dropping invalid event later\n    if (!event.insert_id) {\n      event.insert_id = UUID();\n    }\n\n    return new Promise((resolve) => {\n      const context = {\n        event,\n        attempts: 0,\n        callback: (result: Result) => resolve(result),\n        timeout: 0,\n      };\n      void this.addToQueue(context);\n    });\n  }\n\n  getTryableList(list: Context[]) {\n    return list.filter((context) => {\n      if (context.attempts < this.config.flushMaxRetries) {\n        context.attempts += 1;\n        return true;\n      }\n      void this.fulfillRequest([context], 500, MAX_RETRIES_EXCEEDED_MESSAGE);\n      return false;\n    });\n  }\n\n  scheduleTryable(list: Context[], shouldAddToQueue = false) {\n    list.forEach((context) => {\n      // Only need to concat the queue for the first time\n      if (shouldAddToQueue) {\n        this.queue = this.queue.concat(context);\n      }\n      if (context.timeout === 0) {\n        this.schedule(this.config.flushIntervalMillis);\n        return;\n      }\n\n      setTimeout(() => {\n        context.timeout = 0;\n        this.schedule(0);\n      }, context.timeout);\n    });\n  }\n\n  addToQueue(...list: Context[]) {\n    const tryable = this.getTryableList(list);\n    this.scheduleTryable(tryable, true);\n    this.saveEvents();\n  }\n\n  schedule(timeout: number) {\n    if (this.scheduled || this.config.offline) {\n      return;\n    }\n\n    this.scheduled = setTimeout(() => {\n      void this.flush(true).then(() => {\n        if (this.queue.length > 0) {\n          this.schedule(timeout);\n        }\n      });\n    }, timeout);\n  }\n\n  async flush(useRetry = false) {\n    // Skip flush if offline\n    if (this.config.offline) {\n      this.config.loggerProvider.debug('Skipping flush while offline.');\n      return;\n    }\n\n    const list: Context[] = [];\n    const later: Context[] = [];\n    this.queue.forEach((context) => (context.timeout === 0 ? list.push(context) : later.push(context)));\n\n    if (this.scheduled) {\n      clearTimeout(this.scheduled);\n      this.scheduled = null;\n    }\n\n    const batches = chunk(list, this.config.flushQueueSize);\n\n    await Promise.all(batches.map((batch) => this.send(batch, useRetry)));\n\n    this.scheduleTryable(later);\n  }\n\n  async send(list: Context[], useRetry = true) {\n    if (!this.config.apiKey) {\n      return this.fulfillRequest(list, 400, MISSING_API_KEY_MESSAGE);\n    }\n\n    const payload = {\n      api_key: this.config.apiKey,\n      events: list.map((context) => {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { extra, ...eventWithoutExtra } = context.event;\n        return eventWithoutExtra;\n      }),\n      options: {\n        min_id_length: this.config.minIdLength,\n      },\n      client_upload_time: new Date().toISOString(),\n    };\n\n    try {\n      const { serverUrl } = createServerConfig(this.config.serverUrl, this.config.serverZone, this.config.useBatch);\n      const res = await this.config.transportProvider.send(serverUrl, payload);\n      if (res === null) {\n        this.fulfillRequest(list, 0, UNEXPECTED_ERROR_MESSAGE);\n        return;\n      }\n      if (!useRetry) {\n        if ('body' in res) {\n          this.fulfillRequest(list, res.statusCode, `${res.status}: ${getResponseBodyString(res)}`);\n        } else {\n          this.fulfillRequest(list, res.statusCode, res.status);\n        }\n        return;\n      }\n      this.handleResponse(res, list);\n    } catch (e) {\n      const errorMessage = getErrorMessage(e);\n      this.config.loggerProvider.error(errorMessage);\n      this.handleResponse({ status: Status.Failed, statusCode: 0 }, list);\n    }\n  }\n\n  handleResponse(res: Response, list: Context[]) {\n    const { status } = res;\n\n    switch (status) {\n      case Status.Success: {\n        this.handleSuccessResponse(res, list);\n        break;\n      }\n      case Status.Invalid: {\n        this.handleInvalidResponse(res, list);\n        break;\n      }\n      case Status.PayloadTooLarge: {\n        this.handlePayloadTooLargeResponse(res, list);\n        break;\n      }\n      case Status.RateLimit: {\n        this.handleRateLimitResponse(res, list);\n        break;\n      }\n      default: {\n        // log intermediate event status before retry\n        this.config.loggerProvider.warn(`{code: 0, error: \"Status '${status}' provided for ${list.length} events\"}`);\n        this.handleOtherResponse(list);\n        break;\n      }\n    }\n  }\n\n  handleSuccessResponse(res: SuccessResponse, list: Context[]) {\n    this.fulfillRequest(list, res.statusCode, SUCCESS_MESSAGE);\n  }\n\n  handleInvalidResponse(res: InvalidResponse, list: Context[]) {\n    if (res.body.missingField || res.body.error.startsWith(INVALID_API_KEY)) {\n      this.fulfillRequest(list, res.statusCode, res.body.error);\n      return;\n    }\n\n    const dropIndex = [\n      ...Object.values(res.body.eventsWithInvalidFields),\n      ...Object.values(res.body.eventsWithMissingFields),\n      ...Object.values(res.body.eventsWithInvalidIdLengths),\n      ...res.body.silencedEvents,\n    ].flat();\n    const dropIndexSet = new Set(dropIndex);\n\n    const retry = list.filter((context, index) => {\n      if (dropIndexSet.has(index)) {\n        this.fulfillRequest([context], res.statusCode, res.body.error);\n        return;\n      }\n      return true;\n    });\n\n    if (retry.length > 0) {\n      // log intermediate event status before retry\n      this.config.loggerProvider.warn(getResponseBodyString(res));\n    }\n\n    const tryable = this.getTryableList(retry);\n    this.scheduleTryable(tryable);\n  }\n\n  handlePayloadTooLargeResponse(res: PayloadTooLargeResponse, list: Context[]) {\n    if (list.length === 1) {\n      this.fulfillRequest(list, res.statusCode, res.body.error);\n      return;\n    }\n\n    // log intermediate event status before retry\n    this.config.loggerProvider.warn(getResponseBodyString(res));\n\n    this.config.flushQueueSize /= 2;\n\n    const tryable = this.getTryableList(list);\n    this.scheduleTryable(tryable);\n  }\n\n  handleRateLimitResponse(res: RateLimitResponse, list: Context[]) {\n    const dropUserIds = Object.keys(res.body.exceededDailyQuotaUsers);\n    const dropDeviceIds = Object.keys(res.body.exceededDailyQuotaDevices);\n    const throttledIndex = res.body.throttledEvents;\n    const dropUserIdsSet = new Set(dropUserIds);\n    const dropDeviceIdsSet = new Set(dropDeviceIds);\n    const throttledIndexSet = new Set(throttledIndex);\n\n    const retry = list.filter((context, index) => {\n      if (\n        (context.event.user_id && dropUserIdsSet.has(context.event.user_id)) ||\n        (context.event.device_id && dropDeviceIdsSet.has(context.event.device_id))\n      ) {\n        this.fulfillRequest([context], res.statusCode, res.body.error);\n        return;\n      }\n      if (throttledIndexSet.has(index)) {\n        context.timeout = this.throttleTimeout;\n      }\n      return true;\n    });\n\n    if (retry.length > 0) {\n      // log intermediate event status before retry\n      this.config.loggerProvider.warn(getResponseBodyString(res));\n    }\n\n    const tryable = this.getTryableList(retry);\n    this.scheduleTryable(tryable);\n  }\n\n  handleOtherResponse(list: Context[]) {\n    const later = list.map((context) => {\n      context.timeout = context.attempts * this.retryTimeout;\n      return context;\n    });\n\n    const tryable = this.getTryableList(later);\n    this.scheduleTryable(tryable);\n  }\n\n  fulfillRequest(list: Context[], code: number, message: string) {\n    this.removeEvents(list);\n    list.forEach((context) => context.callback(buildResult(context.event, code, message)));\n  }\n\n  /**\n   * This is called on\n   * 1) new events are added to queue; or\n   * 2) response comes back for a request\n   *\n   * Update the event storage based on the queue\n   */\n  saveEvents() {\n    if (!this.config.storageProvider) {\n      return;\n    }\n\n    const updatedEvents = this.queue.map((context) => context.event);\n    void this.config.storageProvider.set(this.storageKey, updatedEvents);\n  }\n\n  /**\n   * This is called on response comes back for a request\n   */\n  removeEvents(eventsToRemove: Context[]) {\n    this.queue = this.queue.filter(\n      (queuedContext) => !eventsToRemove.some((context) => context.event.insert_id === queuedContext.event.insert_id),\n    );\n\n    this.saveEvents();\n  }\n}\n", "/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-unsafe-call */\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { LogLevel, LogConfig, DebugContext } from '@amplitude/analytics-types';\nimport { AmplitudeCore } from '../core-client';\n\nexport const getStacktrace = (ignoreDepth = 0): string[] => {\n  const trace = new Error().stack || '';\n  return trace\n    .split('\\n')\n    .slice(2 + ignoreDepth)\n    .map((text) => text.trim());\n};\n\n// This hook makes sure we always get the latest logger and logLevel.\nexport const getClientLogConfig = (client: AmplitudeCore) => (): LogConfig => {\n  const { loggerProvider: logger, logLevel } = { ...client.config };\n  return {\n    logger,\n    logLevel,\n  };\n};\n\n// This is a convenient function to get the attribute from object with string path, similar to lodash '#get'.\nexport const getValueByStringPath = (obj: any, path: string): any => {\n  path = path.replace(/\\[(\\w+)\\]/g, '.$1'); // convert indexes to properties\n  path = path.replace(/^\\./, ''); // strip a leading dot\n  for (const attr of path.split('.')) {\n    if (attr in obj) {\n      obj = obj[attr];\n    } else {\n      return;\n    }\n  }\n  return obj;\n};\n\nexport const getClientStates = (client: AmplitudeCore, paths: Array<string>) => (): { [key: string]: any } => {\n  const res: { [key: string]: any } = {};\n  for (const path of paths) {\n    res[path] = getValueByStringPath(client, path);\n  }\n  return res;\n};\n\nexport const debugWrapper =\n  <T extends Array<any>, R>(\n    fn: (...args: T) => R,\n    fnName: string,\n    getLogConfig: () => LogConfig,\n    getStates?: () => { [key: string]: any },\n    fnContext: any = null,\n  ) =>\n  (...args: T): R => {\n    const { logger, logLevel } = getLogConfig();\n    // return early if possible to reduce overhead\n    if ((logLevel && logLevel < LogLevel.Debug) || !logLevel || !logger) {\n      return fn.apply(fnContext, args);\n    }\n    const debugContext: DebugContext = {\n      type: 'invoke public method',\n      name: fnName,\n      args,\n      stacktrace: getStacktrace(1),\n      time: {\n        start: new Date().toISOString(),\n      },\n      states: {},\n    };\n    if (getStates && debugContext.states) {\n      debugContext.states.before = getStates();\n    }\n    const result = fn.apply(fnContext, args);\n    if (result && (result as any).promise) {\n      // if result is a promise, add the callback\n      (result as any).promise.then(() => {\n        if (getStates && debugContext.states) {\n          debugContext.states.after = getStates();\n        }\n        if (debugContext.time) {\n          debugContext.time.end = new Date().toISOString();\n        }\n        logger.debug(JSON.stringify(debugContext, null, 2));\n      });\n    } else {\n      if (getStates && debugContext.states) {\n        debugContext.states.after = getStates();\n      }\n      if (debugContext.time) {\n        debugContext.time.end = new Date().toISOString();\n      }\n      logger.debug(JSON.stringify(debugContext, null, 2));\n    }\n    return result;\n  };\n", "import { Storage } from '@amplitude/analytics-types';\n\nexport class MemoryStorage<T> implements Storage<T> {\n  memoryStorage: Map<string, T> = new Map();\n\n  async isEnabled(): Promise<boolean> {\n    return true;\n  }\n\n  async get(key: string): Promise<T | undefined> {\n    return this.memoryStorage.get(key);\n  }\n\n  async getRaw(key: string): Promise<string | undefined> {\n    const value = await this.get(key);\n    return value ? JSON.stringify(value) : undefined;\n  }\n\n  async set(key: string, value: T): Promise<void> {\n    this.memoryStorage.set(key, value);\n  }\n\n  async remove(key: string): Promise<void> {\n    this.memoryStorage.delete(key);\n  }\n\n  async reset(): Promise<void> {\n    this.memoryStorage.clear();\n  }\n}\n", "/* eslint-disable @typescript-eslint/no-unsafe-argument */\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n/* eslint-disable @typescript-eslint/no-unsafe-call */\nimport { Payload, Response, Status, Transport } from '@amplitude/analytics-types';\n\nexport class BaseTransport implements Transport {\n  send(_serverUrl: string, _payload: Payload): Promise<Response | null> {\n    return Promise.resolve(null);\n  }\n\n  buildResponse(responseJSON: Record<string, any>): Response | null {\n    if (typeof responseJSON !== 'object') {\n      return null;\n    }\n\n    const statusCode = responseJSON.code || 0;\n    const status = this.buildStatus(statusCode);\n\n    switch (status) {\n      case Status.Success:\n        return {\n          status,\n          statusCode,\n          body: {\n            eventsIngested: responseJSON.events_ingested ?? 0,\n            payloadSizeBytes: responseJSON.payload_size_bytes ?? 0,\n            serverUploadTime: responseJSON.server_upload_time ?? 0,\n          },\n        };\n\n      case Status.Invalid:\n        return {\n          status,\n          statusCode,\n          body: {\n            error: responseJSON.error ?? '',\n            missingField: responseJSON.missing_field ?? '',\n            eventsWithInvalidFields: responseJSON.events_with_invalid_fields ?? {},\n            eventsWithMissingFields: responseJSON.events_with_missing_fields ?? {},\n            eventsWithInvalidIdLengths: responseJSON.events_with_invalid_id_lengths ?? {},\n            epsThreshold: responseJSON.eps_threshold ?? 0,\n            exceededDailyQuotaDevices: responseJSON.exceeded_daily_quota_devices ?? {},\n            silencedDevices: responseJSON.silenced_devices ?? [],\n            silencedEvents: responseJSON.silenced_events ?? [],\n            throttledDevices: responseJSON.throttled_devices ?? {},\n            throttledEvents: responseJSON.throttled_events ?? [],\n          },\n        };\n      case Status.PayloadTooLarge:\n        return {\n          status,\n          statusCode,\n          body: {\n            error: responseJSON.error ?? '',\n          },\n        };\n      case Status.RateLimit:\n        return {\n          status,\n          statusCode,\n          body: {\n            error: responseJSON.error ?? '',\n            epsThreshold: responseJSON.eps_threshold ?? 0,\n            throttledDevices: responseJSON.throttled_devices ?? {},\n            throttledUsers: responseJSON.throttled_users ?? {},\n            exceededDailyQuotaDevices: responseJSON.exceeded_daily_quota_devices ?? {},\n            exceededDailyQuotaUsers: responseJSON.exceeded_daily_quota_users ?? {},\n            throttledEvents: responseJSON.throttled_events ?? [],\n          },\n        };\n      case Status.Timeout:\n      default:\n        return {\n          status,\n          statusCode,\n        };\n    }\n  }\n\n  buildStatus(code: number): Status {\n    if (code >= 200 && code < 300) {\n      return Status.Success;\n    }\n\n    if (code === 429) {\n      return Status.RateLimit;\n    }\n\n    if (code === 413) {\n      return Status.PayloadTooLarge;\n    }\n\n    if (code === 408) {\n      return Status.Timeout;\n    }\n\n    if (code >= 400 && code < 500) {\n      return Status.Invalid;\n    }\n\n    if (code >= 500) {\n      return Status.Failed;\n    }\n\n    return Status.Unknown;\n  }\n}\n", "/* eslint-disable no-restricted-globals */\n/* Only file allowed to access to globalThis, window, self */\n\nexport const getGlobalScope = (): typeof globalThis | undefined => {\n  if (typeof globalThis !== 'undefined') {\n    return globalThis;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  return undefined;\n};\n", "import { getGlobalScope } from './global-scope';\n\nexport const getQueryParams = (): Record<string, string | undefined> => {\n  const globalScope = getGlobalScope();\n  /* istanbul ignore if */\n  if (!globalScope?.location?.search) {\n    return {};\n  }\n  const pairs = globalScope.location.search.substring(1).split('&').filter(Boolean);\n  const params = pairs.reduce<Record<string, string | undefined>>((acc, curr) => {\n    const query = curr.split('=', 2);\n    const key = tryDecodeURIComponent(query[0]);\n    const value = tryDecodeURIComponent(query[1]);\n    if (!value) {\n      return acc;\n    }\n    acc[key] = value;\n    return acc;\n  }, {});\n  return params;\n};\n\nexport const tryDecodeURIComponent = (value = '') => {\n  try {\n    return decodeURIComponent(value);\n  } catch {\n    return '';\n  }\n};\n", "import { Campaign } from '@amplitude/analytics-types';\n\nexport const UTM_CAMPAIGN = 'utm_campaign';\nexport const UTM_CONTENT = 'utm_content';\nexport const UTM_ID = 'utm_id';\nexport const UTM_MEDIUM = 'utm_medium';\nexport const UTM_SOURCE = 'utm_source';\nexport const UTM_TERM = 'utm_term';\n\nexport const DCLID = 'dclid';\nexport const FBCLID = 'fbclid';\nexport const GBRAID = 'gbraid';\nexport const GCLID = 'gclid';\nexport const KO_CLICK_ID = 'ko_click_id';\nexport const LI_FAT_ID = 'li_fat_id';\nexport const MSCLKID = 'msclkid';\nexport const RDT_CID = 'rtd_cid';\nexport const TTCLID = 'ttclid';\nexport const TWCLID = 'twclid';\nexport const WBRAID = 'wbraid';\n\nexport const EMPTY_VALUE = 'EMPTY';\n\nexport const BASE_CAMPAIGN: Campaign = {\n  utm_campaign: undefined,\n  utm_content: undefined,\n  utm_id: undefined,\n  utm_medium: undefined,\n  utm_source: undefined,\n  utm_term: undefined,\n  referrer: undefined,\n  referring_domain: undefined,\n  dclid: undefined,\n  gbraid: undefined,\n  gclid: undefined,\n  fbclid: undefined,\n  ko_click_id: undefined,\n  li_fat_id: undefined,\n  msclkid: undefined,\n  rtd_cid: undefined,\n  ttclid: undefined,\n  twclid: undefined,\n  wbraid: undefined,\n};\n\nexport const MKTG = 'MKTG';\n", "import { getQueryParams } from '../query-params';\nimport {\n  UTM_CAMPAIGN,\n  UTM_CONTENT,\n  UTM_MEDIUM,\n  UTM_SOURCE,\n  UTM_TERM,\n  GCLID,\n  FBCLID,\n  BASE_CAMPAIGN,\n  DCLID,\n  MSCLKID,\n  RDT_CID,\n  TWCLID,\n  TTCLID,\n  KO_CLICK_ID,\n  LI_FAT_ID,\n  GBRAID,\n  WBRAID,\n  UTM_ID,\n} from './constants';\nimport {\n  Campaign,\n  CampaignParser as ICampaignParser,\n  ClickIdParameters,\n  ReferrerParameters,\n  UTMParameters,\n} from '@amplitude/analytics-types';\n\nexport class CampaignParser implements ICampaignParser {\n  async parse(): Promise<Campaign> {\n    return {\n      ...BASE_CAMPAIGN,\n      ...this.getUtmParam(),\n      ...this.getReferrer(),\n      ...this.getClickIds(),\n    } as Campaign;\n  }\n\n  getUtmParam(): UTMParameters {\n    const params = getQueryParams();\n\n    const utmCampaign = params[UTM_CAMPAIGN];\n    const utmContent = params[UTM_CONTENT];\n    const utmId = params[UTM_ID];\n    const utmMedium = params[UTM_MEDIUM];\n    const utmSource = params[UTM_SOURCE];\n    const utmTerm = params[UTM_TERM];\n\n    return {\n      utm_campaign: utmCampaign,\n      utm_content: utmContent,\n      utm_id: utmId,\n      utm_medium: utmMedium,\n      utm_source: utmSource,\n      utm_term: utmTerm,\n    };\n  }\n\n  getReferrer(): ReferrerParameters {\n    const data: ReferrerParameters = {\n      referrer: undefined,\n      referring_domain: undefined,\n    };\n    try {\n      data.referrer = document.referrer || undefined;\n      data.referring_domain = data.referrer?.split('/')[2] ?? undefined;\n    } catch {\n      // nothing to track\n    }\n    return data;\n  }\n\n  getClickIds(): ClickIdParameters {\n    const params = getQueryParams();\n    return {\n      [DCLID]: params[DCLID],\n      [FBCLID]: params[FBCLID],\n      [GBRAID]: params[GBRAID],\n      [GCLID]: params[GCLID],\n      [KO_CLICK_ID]: params[KO_CLICK_ID],\n      [LI_FAT_ID]: params[LI_FAT_ID],\n      [MSCLKID]: params[MSCLKID],\n      [RDT_CID]: params[RDT_CID],\n      [TTCLID]: params[TTCLID],\n      [TWCLID]: params[TWCLID],\n      [WBRAID]: params[WBRAID],\n    };\n  }\n}\n", "import { AMPLITUDE_PREFIX } from '@amplitude/analytics-core';\n\nexport const getCookieName = (apiKey: string, postKey = '', limit = 10) => {\n  return [AMPLITUDE_PREFIX, postKey, apiKey.substring(0, limit)].filter(Boolean).join('_');\n};\n\nexport const getOldCookieName = (apiKey: string) => {\n  return `${AMPLITUDE_PREFIX.toLowerCase()}_${apiKey.substring(0, 6)}`;\n};\n", "import { createIdentifyEvent, Identify } from '@amplitude/analytics-core';\nimport {\n  Storage,\n  Campaign,\n  CampaignParser as ICampaignParser,\n  CampaignTracker as ICampaignTracker,\n  CampaignTrackFunction,\n  CampaignTrackerOptions,\n  BaseEvent,\n} from '@amplitude/analytics-types';\nimport { getCookieName as getStorageKey } from '../cookie-name';\nimport { CampaignParser } from './campaign-parser';\nimport { BASE_CAMPAIGN, EMPTY_VALUE, MKTG } from './constants';\n\n/**\n * @deprecated\n * Campaign tracker has mixed logic from built-in and plugin web attribution\n * features. Do not add more features here. The plan moving foward is to consolidate\n * logic in @amplitude/plugin-web-attribution-browser with backward compatibility.\n */\nexport class CampaignTracker implements ICampaignTracker {\n  storage: Storage<Campaign>;\n  storageKey: string;\n  parser: ICampaignParser;\n  track: CampaignTrackFunction;\n  onNewCampaign: (campaign: Campaign) => unknown;\n\n  disabled: boolean;\n  trackNewCampaigns: boolean;\n  trackPageViews: boolean;\n  excludeReferrers: string[];\n  initialEmptyValue: string;\n\n  constructor(apiKey: string, options: CampaignTrackerOptions) {\n    this.storage = options.storage;\n    this.storageKey = getStorageKey(apiKey, MKTG);\n    this.parser = new CampaignParser();\n    this.track = options.track;\n    this.onNewCampaign = options.onNewCampaign;\n\n    this.disabled = Boolean(options.disabled);\n    this.trackNewCampaigns = Boolean(options.trackNewCampaigns);\n    this.trackPageViews = Boolean(options.trackPageViews);\n    this.excludeReferrers = options.excludeReferrers ?? [];\n    if (typeof location !== 'undefined') {\n      this.excludeReferrers.unshift(location.hostname);\n    }\n    this.initialEmptyValue = options.initialEmptyValue ?? EMPTY_VALUE;\n  }\n\n  isNewCampaign(current: Campaign, previous: Campaign | undefined, ignoreSubdomainInReferrer = false) {\n    const { referrer, referring_domain, ...currentCampaign } = current;\n    const { referrer: _previous_referrer, referring_domain: prevReferringDomain, ...previousCampaign } = previous || {};\n\n    if (current.referring_domain && this.excludeReferrers.includes(current.referring_domain)) {\n      return false;\n    }\n\n    const hasNewCampaign = JSON.stringify(currentCampaign) !== JSON.stringify(previousCampaign);\n    const hasNewDomain = ignoreSubdomainInReferrer\n      ? domainWithoutSubdomain(referring_domain || '') !== domainWithoutSubdomain(prevReferringDomain || '')\n      : referring_domain !== prevReferringDomain;\n\n    return !previous || hasNewCampaign || hasNewDomain;\n  }\n\n  async saveCampaignToStorage(campaign: Campaign): Promise<void> {\n    await this.storage.set(this.storageKey, campaign);\n  }\n\n  async getCampaignFromStorage(): Promise<Campaign | undefined> {\n    return await this.storage.get(this.storageKey);\n  }\n\n  createCampaignEvent(campaign: Campaign) {\n    const campaignParameters: Campaign = {\n      // This object definition allows undefined keys to be iterated on\n      // in .reduce() to build indentify object\n      ...BASE_CAMPAIGN,\n      ...campaign,\n    };\n    const identifyEvent = Object.entries(campaignParameters).reduce((identify, [key, value]) => {\n      identify.setOnce(`initial_${key}`, value || this.initialEmptyValue);\n      if (value) {\n        return identify.set(key, value);\n      }\n      return identify.unset(key);\n    }, new Identify());\n\n    const pageViewEvent: BaseEvent = {\n      event_type: 'Page View',\n      event_properties: {\n        page_title: /* istanbul ignore next */ (typeof document !== 'undefined' && document.title) || '',\n        page_location: /* istanbul ignore next */ (typeof location !== 'undefined' && location.href) || '',\n        page_path: /* istanbul ignore next */ (typeof location !== 'undefined' && location.pathname) || '',\n      },\n    };\n    return {\n      ...createIdentifyEvent(identifyEvent),\n      ...(this.trackPageViews && pageViewEvent),\n    };\n  }\n\n  async send(isNewSession: boolean) {\n    if (this.disabled) {\n      return;\n    }\n    const currentCampaign = await this.parser.parse();\n    const previousCampaign = await this.getCampaignFromStorage();\n    if (!isNewSession) {\n      if (!this.trackNewCampaigns || !this.isNewCampaign(currentCampaign, previousCampaign)) {\n        return;\n      }\n      this.onNewCampaign(currentCampaign);\n    }\n    await this.track(this.createCampaignEvent(currentCampaign));\n    await this.saveCampaignToStorage(currentCampaign);\n  }\n}\n\nconst domainWithoutSubdomain = (domain: string) => {\n  const parts = domain.split('.');\n\n  if (parts.length <= 2) {\n    return domain;\n  }\n\n  return parts.slice(parts.length - 2, parts.length).join('.');\n};\n", "import { createIdentifyEvent, Identify } from '@amplitude/analytics-core';\nimport { Campaign } from '@amplitude/analytics-types';\nimport { BASE_CAMPAIGN } from './constants';\n\nexport interface Options {\n  excludeReferrers?: (string | RegExp)[];\n  initialEmptyValue?: string;\n  resetSessionOnNewCampaign?: boolean;\n}\n\nconst domainWithoutSubdomain = (domain: string) => {\n  const parts = domain.split('.');\n\n  if (parts.length <= 2) {\n    return domain;\n  }\n\n  return parts.slice(parts.length - 2, parts.length).join('.');\n};\n\n//Direct traffic mean no external referral, no UTMs, no click-ids, and no other customer identified marketing campaign url params.\nconst isDirectTraffic = (current: Campaign) => {\n  return Object.values(current).every((value) => !value);\n};\n\nexport const isNewCampaign = (\n  current: Campaign,\n  previous: Campaign | undefined,\n  options: Options,\n  isNewSession = true,\n) => {\n  const { referrer, referring_domain, ...currentCampaign } = current;\n  const { referrer: _previous_referrer, referring_domain: prevReferringDomain, ...previousCampaign } = previous || {};\n\n  if (isExcludedReferrer(options.excludeReferrers, current.referring_domain)) {\n    return false;\n  }\n\n  //In the same session, direct traffic should not override or unset any persisting query params\n  if (!isNewSession && isDirectTraffic(current) && previous) {\n    return false;\n  }\n\n  const hasNewCampaign = JSON.stringify(currentCampaign) !== JSON.stringify(previousCampaign);\n  const hasNewDomain =\n    domainWithoutSubdomain(referring_domain || '') !== domainWithoutSubdomain(prevReferringDomain || '');\n\n  return !previous || hasNewCampaign || hasNewDomain;\n};\n\nexport const isExcludedReferrer = (excludeReferrers: (string | RegExp)[] = [], referringDomain = '') => {\n  return excludeReferrers.some((value) =>\n    value instanceof RegExp ? value.test(referringDomain) : value === referringDomain,\n  );\n};\n\nexport const createCampaignEvent = (campaign: Campaign, options: Options) => {\n  const campaignParameters: Campaign = {\n    // This object definition allows undefined keys to be iterated on\n    // in .reduce() to build indentify object\n    ...BASE_CAMPAIGN,\n    ...campaign,\n  };\n  const identifyEvent = Object.entries(campaignParameters).reduce((identify, [key, value]) => {\n    identify.setOnce(`initial_${key}`, value ?? options.initialEmptyValue ?? 'EMPTY');\n    if (value) {\n      return identify.set(key, value);\n    }\n    return identify.unset(key);\n  }, new Identify());\n\n  return createIdentifyEvent(identifyEvent);\n};\n\nexport const getDefaultExcludedReferrers = (cookieDomain: string | undefined) => {\n  let domain = cookieDomain;\n  if (domain) {\n    if (domain.startsWith('.')) {\n      domain = domain.substring(1);\n    }\n    return [new RegExp(`${domain.replace('.', '\\\\.')}$`)];\n  }\n  return [];\n};\n", "import { AMPLITUDE_PREFIX } from '@amplitude/analytics-core';\n\nexport const getStorageKey = (apiKey: string, postKey = '', limit = 10) => {\n  return [AMPLITUDE_PREFIX, postKey, apiKey.substring(0, limit)].filter(Boolean).join('_');\n};\n", "export const isNewSession = (sessionTimeout: number, lastEventTime: number = Date.now()): boolean => {\n  const currentTime = Date.now();\n  const timeSinceLastEvent = currentTime - lastEventTime;\n\n  return timeSinceLastEvent > sessionTimeout;\n};\n", "import { BrowserConfig } from '@amplitude/analytics-types';\nimport { Campaign, Storage } from '@amplitude/analytics-types';\nimport { Options, getDefaultExcludedReferrers, createCampaignEvent, isNewCampaign } from './helpers';\nimport { getStorageKey } from '../storage/helpers';\nimport { CampaignParser } from './campaign-parser';\nimport { BASE_CAMPAIGN } from './constants';\nimport { isNewSession } from '../session';\n\nexport class WebAttribution {\n  options: Options;\n  storage: Storage<Campaign>;\n  storageKey: string;\n  previousCampaign?: Campaign;\n  currentCampaign: Campaign;\n  shouldTrackNewCampaign = false;\n  sessionTimeout: number;\n  lastEventTime?: number;\n\n  constructor(options: Options, config: BrowserConfig) {\n    this.options = {\n      initialEmptyValue: 'EMPTY',\n      resetSessionOnNewCampaign: false,\n      excludeReferrers: getDefaultExcludedReferrers(config.cookieOptions?.domain),\n      ...options,\n    };\n    this.storage = config.cookieStorage as unknown as Storage<Campaign>;\n    this.storageKey = getStorageKey(config.apiKey, 'MKTG');\n    this.currentCampaign = BASE_CAMPAIGN;\n    this.sessionTimeout = config.sessionTimeout;\n    this.lastEventTime = config.lastEventTime;\n    config.loggerProvider.log('Installing web attribution tracking.');\n  }\n\n  async init() {\n    [this.currentCampaign, this.previousCampaign] = await this.fetchCampaign();\n    const isEventInNewSession = !this.lastEventTime ? true : isNewSession(this.sessionTimeout, this.lastEventTime);\n\n    if (isNewCampaign(this.currentCampaign, this.previousCampaign, this.options, isEventInNewSession)) {\n      this.shouldTrackNewCampaign = true;\n      await this.storage.set(this.storageKey, this.currentCampaign);\n    }\n  }\n\n  async fetchCampaign() {\n    return await Promise.all([new CampaignParser().parse(), this.storage.get(this.storageKey)]);\n  }\n\n  /**\n   * This can be called when enable web attribution and either\n   * 1. set a new session\n   * 2. has new campaign and enable resetSessionOnNewCampaign\n   */\n  generateCampaignEvent(event_id?: number) {\n    // Mark this campaign has been tracked\n    this.shouldTrackNewCampaign = false;\n    const campaignEvent = createCampaignEvent(this.currentCampaign, this.options);\n    if (event_id) {\n      campaignEvent.event_id = event_id;\n    }\n    return campaignEvent;\n  }\n\n  shouldSetSessionIdOnNewCampaign() {\n    return this.shouldTrackNewCampaign && !!this.options.resetSessionOnNewCampaign;\n  }\n}\n", "import { Storage, CookieStorageOptions } from '@amplitude/analytics-types';\nimport { getGlobalScope } from '../global-scope';\n\nexport class CookieStorage<T> implements Storage<T> {\n  options: CookieStorageOptions;\n  private static testValue: undefined | string;\n\n  constructor(options?: CookieStorageOptions) {\n    this.options = { ...options };\n  }\n\n  async isEnabled(): Promise<boolean> {\n    /* istanbul ignore if */\n    if (!getGlobalScope()) {\n      return false;\n    }\n\n    CookieStorage.testValue = String(Date.now());\n    const testStrorage = new CookieStorage<string>(this.options);\n    const testKey = 'AMP_TEST';\n    try {\n      await testStrorage.set(testKey, CookieStorage.testValue);\n      const value = await testStrorage.get(testKey);\n      return value === CookieStorage.testValue;\n    } catch {\n      /* istanbul ignore next */\n      return false;\n    } finally {\n      await testStrorage.remove(testKey);\n    }\n  }\n\n  async get(key: string): Promise<T | undefined> {\n    let value = await this.getRaw(key);\n    if (!value) {\n      return undefined;\n    }\n    try {\n      try {\n        value = decodeURIComponent(atob(value));\n      } catch {\n        // value not encoded\n      }\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n      return JSON.parse(value);\n    } catch {\n      /* istanbul ignore next */\n      return undefined;\n    }\n  }\n\n  async getRaw(key: string): Promise<string | undefined> {\n    const globalScope = getGlobalScope();\n    const cookie = globalScope?.document?.cookie.split('; ') ?? [];\n    const match = cookie.find((c) => c.indexOf(key + '=') === 0);\n    if (!match) {\n      return undefined;\n    }\n    return match.substring(key.length + 1);\n  }\n\n  async set(key: string, value: T | null): Promise<void> {\n    try {\n      const expirationDays = this.options.expirationDays ?? 0;\n      const expires = value !== null ? expirationDays : -1;\n      let expireDate: Date | undefined = undefined;\n      if (expires) {\n        const date = new Date();\n        date.setTime(date.getTime() + expires * 24 * 60 * 60 * 1000);\n        expireDate = date;\n      }\n      let str = `${key}=${btoa(encodeURIComponent(JSON.stringify(value)))}`;\n      if (expireDate) {\n        str += `; expires=${expireDate.toUTCString()}`;\n      }\n      str += '; path=/';\n      if (this.options.domain) {\n        str += `; domain=${this.options.domain}`;\n      }\n      if (this.options.secure) {\n        str += '; Secure';\n      }\n      if (this.options.sameSite) {\n        str += `; SameSite=${this.options.sameSite}`;\n      }\n      const globalScope = getGlobalScope();\n      if (globalScope) {\n        globalScope.document.cookie = str;\n      }\n    } catch {\n      //\n    }\n  }\n\n  async remove(key: string): Promise<void> {\n    await this.set(key, null);\n  }\n\n  async reset(): Promise<void> {\n    return;\n  }\n}\n", "import { BaseTransport } from '@amplitude/analytics-core';\nimport { Payload, Response, Transport } from '@amplitude/analytics-types';\n\nexport class FetchTransport extends BaseTransport implements Transport {\n  async send(serverUrl: string, payload: Payload): Promise<Response | null> {\n    /* istanbul ignore if */\n    if (typeof fetch === 'undefined') {\n      throw new Error('FetchTransport is not supported');\n    }\n    const options: RequestInit = {\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: '*/*',\n      },\n      body: JSON.stringify(payload),\n      method: 'POST',\n    };\n    const response = await fetch(serverUrl, options);\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const responsePayload: Record<string, any> = await response.json();\n    return this.buildResponse(responsePayload);\n  }\n}\n", "var ApplicationContextProviderImpl = /** @class */ (function () {\n    function ApplicationContextProviderImpl() {\n    }\n    ApplicationContextProviderImpl.prototype.getApplicationContext = function () {\n        return {\n            versionName: this.versionName,\n            language: getLanguage(),\n            platform: 'Web',\n            os: undefined,\n            deviceModel: undefined,\n        };\n    };\n    return ApplicationContextProviderImpl;\n}());\nvar getLanguage = function () {\n    return ((typeof navigator !== 'undefined' &&\n        ((navigator.languages && navigator.languages[0]) ||\n            navigator.language)) ||\n        '');\n};\n\nvar EventBridgeImpl = /** @class */ (function () {\n    function EventBridgeImpl() {\n        this.queue = [];\n    }\n    EventBridgeImpl.prototype.logEvent = function (event) {\n        if (!this.receiver) {\n            if (this.queue.length < 512) {\n                this.queue.push(event);\n            }\n        }\n        else {\n            this.receiver(event);\n        }\n    };\n    EventBridgeImpl.prototype.setEventReceiver = function (receiver) {\n        this.receiver = receiver;\n        if (this.queue.length > 0) {\n            this.queue.forEach(function (event) {\n                receiver(event);\n            });\n            this.queue = [];\n        }\n    };\n    return EventBridgeImpl;\n}());\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nvar isEqual = function (obj1, obj2) {\n    var primitive = ['string', 'number', 'boolean', 'undefined'];\n    var typeA = typeof obj1;\n    var typeB = typeof obj2;\n    if (typeA !== typeB) {\n        return false;\n    }\n    for (var _i = 0, primitive_1 = primitive; _i < primitive_1.length; _i++) {\n        var p = primitive_1[_i];\n        if (p === typeA) {\n            return obj1 === obj2;\n        }\n    }\n    // check null\n    if (obj1 == null && obj2 == null) {\n        return true;\n    }\n    else if (obj1 == null || obj2 == null) {\n        return false;\n    }\n    // if got here - objects\n    if (obj1.length !== obj2.length) {\n        return false;\n    }\n    //check if arrays\n    var isArrayA = Array.isArray(obj1);\n    var isArrayB = Array.isArray(obj2);\n    if (isArrayA !== isArrayB) {\n        return false;\n    }\n    if (isArrayA && isArrayB) {\n        //arrays\n        for (var i = 0; i < obj1.length; i++) {\n            if (!isEqual(obj1[i], obj2[i])) {\n                return false;\n            }\n        }\n    }\n    else {\n        //objects\n        var sorted1 = Object.keys(obj1).sort();\n        var sorted2 = Object.keys(obj2).sort();\n        if (!isEqual(sorted1, sorted2)) {\n            return false;\n        }\n        //compare object values\n        var result_1 = true;\n        Object.keys(obj1).forEach(function (key) {\n            if (!isEqual(obj1[key], obj2[key])) {\n                result_1 = false;\n            }\n        });\n        return result_1;\n    }\n    return true;\n};\n\nvar ID_OP_SET = '$set';\nvar ID_OP_UNSET = '$unset';\nvar ID_OP_CLEAR_ALL = '$clearAll';\n// Polyfill for Object.entries\nif (!Object.entries) {\n    Object.entries = function (obj) {\n        var ownProps = Object.keys(obj);\n        var i = ownProps.length;\n        var resArray = new Array(i);\n        while (i--) {\n            resArray[i] = [ownProps[i], obj[ownProps[i]]];\n        }\n        return resArray;\n    };\n}\nvar IdentityStoreImpl = /** @class */ (function () {\n    function IdentityStoreImpl() {\n        this.identity = { userProperties: {} };\n        this.listeners = new Set();\n    }\n    IdentityStoreImpl.prototype.editIdentity = function () {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var self = this;\n        var actingUserProperties = __assign({}, this.identity.userProperties);\n        var actingIdentity = __assign(__assign({}, this.identity), { userProperties: actingUserProperties });\n        return {\n            setUserId: function (userId) {\n                actingIdentity.userId = userId;\n                return this;\n            },\n            setDeviceId: function (deviceId) {\n                actingIdentity.deviceId = deviceId;\n                return this;\n            },\n            setUserProperties: function (userProperties) {\n                actingIdentity.userProperties = userProperties;\n                return this;\n            },\n            setOptOut: function (optOut) {\n                actingIdentity.optOut = optOut;\n                return this;\n            },\n            updateUserProperties: function (actions) {\n                var actingProperties = actingIdentity.userProperties || {};\n                for (var _i = 0, _a = Object.entries(actions); _i < _a.length; _i++) {\n                    var _b = _a[_i], action = _b[0], properties = _b[1];\n                    switch (action) {\n                        case ID_OP_SET:\n                            for (var _c = 0, _d = Object.entries(properties); _c < _d.length; _c++) {\n                                var _e = _d[_c], key = _e[0], value = _e[1];\n                                actingProperties[key] = value;\n                            }\n                            break;\n                        case ID_OP_UNSET:\n                            for (var _f = 0, _g = Object.keys(properties); _f < _g.length; _f++) {\n                                var key = _g[_f];\n                                delete actingProperties[key];\n                            }\n                            break;\n                        case ID_OP_CLEAR_ALL:\n                            actingProperties = {};\n                            break;\n                    }\n                }\n                actingIdentity.userProperties = actingProperties;\n                return this;\n            },\n            commit: function () {\n                self.setIdentity(actingIdentity);\n                return this;\n            },\n        };\n    };\n    IdentityStoreImpl.prototype.getIdentity = function () {\n        return __assign({}, this.identity);\n    };\n    IdentityStoreImpl.prototype.setIdentity = function (identity) {\n        var originalIdentity = __assign({}, this.identity);\n        this.identity = __assign({}, identity);\n        if (!isEqual(originalIdentity, this.identity)) {\n            this.listeners.forEach(function (listener) {\n                listener(identity);\n            });\n        }\n    };\n    IdentityStoreImpl.prototype.addIdentityListener = function (listener) {\n        this.listeners.add(listener);\n    };\n    IdentityStoreImpl.prototype.removeIdentityListener = function (listener) {\n        this.listeners.delete(listener);\n    };\n    return IdentityStoreImpl;\n}());\n\nvar safeGlobal = typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof global !== 'undefined'\n        ? global\n        : self;\n\nvar AnalyticsConnector = /** @class */ (function () {\n    function AnalyticsConnector() {\n        this.identityStore = new IdentityStoreImpl();\n        this.eventBridge = new EventBridgeImpl();\n        this.applicationContextProvider = new ApplicationContextProviderImpl();\n    }\n    AnalyticsConnector.getInstance = function (instanceName) {\n        if (!safeGlobal['analyticsConnectorInstances']) {\n            safeGlobal['analyticsConnectorInstances'] = {};\n        }\n        if (!safeGlobal['analyticsConnectorInstances'][instanceName]) {\n            safeGlobal['analyticsConnectorInstances'][instanceName] =\n                new AnalyticsConnector();\n        }\n        return safeGlobal['analyticsConnectorInstances'][instanceName];\n    };\n    return AnalyticsConnector;\n}());\n\nexport { AnalyticsConnector };\n", "import { AnalyticsConnector } from '@amplitude/analytics-connector';\n\nexport const getAnalyticsConnector = (instanceName = '$default_instance'): AnalyticsConnector => {\n  return AnalyticsConnector.getInstance(instanceName);\n};\n\nexport const setConnectorUserId = (userId: string | undefined, instanceName?: string): void => {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  getAnalyticsConnector(instanceName).identityStore.editIdentity().setUserId(userId).commit();\n};\n\nexport const setConnectorDeviceId = (deviceId: string, instanceName?: string): void => {\n  getAnalyticsConnector(instanceName).identityStore.editIdentity().setDeviceId(deviceId).commit();\n};\n", "import { BeforePlugin, Config, Event } from '@amplitude/analytics-types';\nimport { getAnalyticsConnector } from '../analytics-connector';\n\nexport class IdentityEventSender implements BeforePlugin {\n  name = 'identity';\n  type = 'before' as const;\n\n  identityStore = getAnalyticsConnector().identityStore;\n\n  async execute(context: Event): Promise<Event> {\n    const userProperties = context.user_properties as Record<string, any>;\n    if (userProperties) {\n      this.identityStore.editIdentity().updateUserProperties(userProperties).commit();\n    }\n    return context;\n  }\n\n  async setup(config: Config) {\n    if (config.instanceName) {\n      this.identityStore = getAnalyticsConnector(config.instanceName).identityStore;\n    }\n  }\n}\n", "export const getLanguage = (): string => {\n  if (typeof navigator === 'undefined') return '';\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  const userLanguage = (navigator as any).userLanguage as string | undefined;\n\n  return navigator.languages?.[0] ?? navigator.language ?? userLanguage ?? '';\n};\n", "import {\n  AttributionOptions,\n  BrowserOptions,\n  DefaultTrackingOptions,\n  PageTrackingHistoryChanges,\n  PageTrackingOptions,\n  PageTrackingTrackOn,\n} from '@amplitude/analytics-types';\n\n/**\n * Returns false if defaultTracking === false or if defaultTracking[event],\n * otherwise returns true\n */\nconst isTrackingEnabled = (\n  defaultTracking: DefaultTrackingOptions | boolean | undefined,\n  event: keyof DefaultTrackingOptions,\n) => {\n  if (typeof defaultTracking === 'boolean') {\n    return defaultTracking;\n  }\n\n  if (defaultTracking?.[event] === false) {\n    return false;\n  }\n\n  return true;\n};\n\nexport const isAttributionTrackingEnabled = (defaultTracking: DefaultTrackingOptions | boolean | undefined) =>\n  isTrackingEnabled(defaultTracking, 'attribution');\n\nexport const isFileDownloadTrackingEnabled = (defaultTracking: DefaultTrackingOptions | boolean | undefined) =>\n  isTrackingEnabled(defaultTracking, 'fileDownloads');\n\nexport const isFormInteractionTrackingEnabled = (defaultTracking: DefaultTrackingOptions | boolean | undefined) =>\n  isTrackingEnabled(defaultTracking, 'formInteractions');\n\nexport const isPageViewTrackingEnabled = (defaultTracking: DefaultTrackingOptions | boolean | undefined) =>\n  isTrackingEnabled(defaultTracking, 'pageViews');\n\nexport const isSessionTrackingEnabled = (defaultTracking: DefaultTrackingOptions | boolean | undefined) =>\n  isTrackingEnabled(defaultTracking, 'sessions');\n\nexport const getPageViewTrackingConfig = (config: BrowserOptions): PageTrackingOptions => {\n  let trackOn: PageTrackingTrackOn | undefined = () => false;\n  let trackHistoryChanges: PageTrackingHistoryChanges | undefined = undefined;\n  let eventType: string | undefined;\n  const pageCounter = config.pageCounter;\n\n  const isDefaultPageViewTrackingEnabled = isPageViewTrackingEnabled(config.defaultTracking);\n  if (isDefaultPageViewTrackingEnabled) {\n    trackOn = undefined;\n    eventType = undefined;\n\n    if (\n      config.defaultTracking &&\n      typeof config.defaultTracking === 'object' &&\n      config.defaultTracking.pageViews &&\n      typeof config.defaultTracking.pageViews === 'object'\n    ) {\n      if ('trackOn' in config.defaultTracking.pageViews) {\n        trackOn = config.defaultTracking.pageViews.trackOn;\n      }\n\n      if ('trackHistoryChanges' in config.defaultTracking.pageViews) {\n        trackHistoryChanges = config.defaultTracking.pageViews.trackHistoryChanges;\n      }\n\n      if ('eventType' in config.defaultTracking.pageViews && config.defaultTracking.pageViews.eventType) {\n        eventType = config.defaultTracking.pageViews.eventType;\n      }\n    }\n  }\n\n  return {\n    trackOn,\n    trackHistoryChanges,\n    eventType,\n    pageCounter,\n  };\n};\n\nexport const getAttributionTrackingConfig = (config: BrowserOptions): AttributionOptions => {\n  if (\n    isAttributionTrackingEnabled(config.defaultTracking) &&\n    config.defaultTracking &&\n    typeof config.defaultTracking === 'object' &&\n    config.defaultTracking.attribution &&\n    typeof config.defaultTracking.attribution === 'object'\n  ) {\n    return {\n      ...config.defaultTracking.attribution,\n    };\n  }\n\n  return {};\n};\n", "import { AmplitudeReturn, InstanceProxy, QueueProxy, Result } from '@amplitude/analytics-types';\n\n/**\n * Applies the proxied functions on the proxied amplitude snippet to an instance of the real object.\n * @ignore\n */\nexport const runQueuedFunctions = (instance: object, queue: QueueProxy) => {\n  convertProxyObjectToRealObject(instance, queue);\n};\n\n/**\n * Applies the proxied functions on the proxied object to an instance of the real object.\n * Used to convert proxied Identify and Revenue objects.\n */\nexport const convertProxyObjectToRealObject = <T>(instance: T, queue: QueueProxy): T => {\n  for (let i = 0; i < queue.length; i++) {\n    const { name, args, resolve } = queue[i];\n    const fn = instance && instance[name as keyof T];\n    if (typeof fn === 'function') {\n      const result = fn.apply(instance, args) as AmplitudeReturn<Result>;\n      if (typeof resolve === 'function') {\n        resolve(result?.promise);\n      }\n    }\n  }\n  return instance;\n};\n\n/**\n * Check if the param is snippet proxy\n */\nexport const isInstanceProxy = (instance: unknown): instance is InstanceProxy => {\n  const instanceProxy = instance as InstanceProxy;\n  return instanceProxy && instanceProxy._q !== undefined;\n};\n", "export const VERSION = '2.8.0';\n", "import { BeforePlugin, BrowserConfig, Event } from '@amplitude/analytics-types';\nimport { UUID } from '@amplitude/analytics-core';\nimport { getLanguage } from '@amplitude/analytics-client-common';\nimport { VERSION } from '../version';\n\nconst BROWSER_PLATFORM = 'Web';\nconst IP_ADDRESS = '$remote';\nexport class Context implements BeforePlugin {\n  name = '@amplitude/plugin-context-browser';\n  type = 'before' as const;\n\n  // this.config is defined in setup() which will always be called first\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  config: BrowserConfig;\n  userAgent: string | undefined;\n  library = `amplitude-ts/${VERSION}`;\n\n  constructor() {\n    /* istanbul ignore else */\n    if (typeof navigator !== 'undefined') {\n      this.userAgent = navigator.userAgent;\n    }\n  }\n\n  setup(config: BrowserConfig): Promise<undefined> {\n    this.config = config;\n\n    return Promise.resolve(undefined);\n  }\n\n  async execute(context: Event): Promise<Event> {\n    const time = new Date().getTime();\n    const lastEventId = this.config.lastEventId ?? -1;\n    const nextEventId = context.event_id ?? lastEventId + 1;\n    this.config.lastEventId = nextEventId;\n    if (!context.time) {\n      this.config.lastEventTime = time;\n    }\n\n    const event: Event = {\n      user_id: this.config.userId,\n      device_id: this.config.deviceId,\n      session_id: this.config.sessionId,\n      time,\n      ...(this.config.appVersion && { app_version: this.config.appVersion }),\n      ...(this.config.trackingOptions.platform && { platform: BROWSER_PLATFORM }),\n      ...(this.config.trackingOptions.language && { language: getLanguage() }),\n      ...(this.config.trackingOptions.ipAddress && { ip: IP_ADDRESS }),\n      insert_id: UUID(),\n      partner_id: this.config.partnerId,\n      plan: this.config.plan,\n      ...(this.config.ingestionMetadata && {\n        ingestion_metadata: {\n          source_name: this.config.ingestionMetadata.sourceName,\n          source_version: this.config.ingestionMetadata.sourceVersion,\n        },\n      }),\n      ...context,\n      event_id: nextEventId,\n      library: this.library,\n      user_agent: this.userAgent,\n    };\n    return event;\n  }\n}\n", "import { Storage as AmplitudeStorage } from '@amplitude/analytics-types';\n\nexport class BrowserStorage<T> implements AmplitudeStorage<T> {\n  constructor(private storage?: Storage) {}\n\n  async isEnabled(): Promise<boolean> {\n    /* istanbul ignore if */\n    if (!this.storage) {\n      return false;\n    }\n\n    const random = String(Date.now());\n    const testStorage = new BrowserStorage<string>(this.storage);\n    const testKey = 'AMP_TEST';\n    try {\n      await testStorage.set(testKey, random);\n      const value = await testStorage.get(testKey);\n      return value === random;\n    } catch {\n      /* istanbul ignore next */\n      return false;\n    } finally {\n      await testStorage.remove(testKey);\n    }\n  }\n\n  async get(key: string): Promise<T | undefined> {\n    try {\n      const value = await this.getRaw(key);\n      if (!value) {\n        return undefined;\n      }\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n      return JSON.parse(value);\n    } catch {\n      console.error(`[Amplitude] Error: Could not get value from storage`);\n      return undefined;\n    }\n  }\n\n  async getRaw(key: string): Promise<string | undefined> {\n    return this.storage?.getItem(key) || undefined;\n  }\n\n  async set(key: string, value: T): Promise<void> {\n    try {\n      this.storage?.setItem(key, JSON.stringify(value));\n    } catch {\n      //\n    }\n  }\n\n  async remove(key: string): Promise<void> {\n    try {\n      this.storage?.removeItem(key);\n    } catch {\n      //\n    }\n  }\n\n  async reset(): Promise<void> {\n    try {\n      this.storage?.clear();\n    } catch {\n      //\n    }\n  }\n}\n", "import { getGlobalScope } from '@amplitude/analytics-client-common';\nimport { BrowserStorage } from './browser-storage';\nimport { Logger } from '@amplitude/analytics-types';\n\nconst MAX_ARRAY_LENGTH = 1000;\n\ninterface LocalStorageOptions {\n  loggerProvider?: Logger;\n}\nexport class LocalStorage<T> extends BrowserStorage<T> {\n  loggerProvider?: Logger;\n\n  constructor(config?: LocalStorageOptions) {\n    super(getGlobalScope()?.localStorage);\n    this.loggerProvider = config?.loggerProvider;\n  }\n\n  async set(key: string, value: T): Promise<void> {\n    if (Array.isArray(value) && value.length > MAX_ARRAY_LENGTH) {\n      const droppedEventsCount = value.length - MAX_ARRAY_LENGTH;\n      await super.set(key, value.slice(0, MAX_ARRAY_LENGTH) as T);\n      this.loggerProvider?.error(\n        `Failed to save ${droppedEventsCount} events because the queue length exceeded ${MAX_ARRAY_LENGTH}.`,\n      );\n    } else {\n      await super.set(key, value);\n    }\n  }\n}\n", "import { getGlobalScope } from '@amplitude/analytics-client-common';\nimport { BrowserStorage } from './browser-storage';\n\nexport class SessionStorage<T> extends BrowserStorage<T> {\n  constructor() {\n    super(getGlobalScope()?.sessionStorage);\n  }\n}\n", "import { BaseTransport } from '@amplitude/analytics-core';\nimport { Payload, Response, Transport } from '@amplitude/analytics-types';\n\nexport class XHRTransport extends BaseTransport implements Transport {\n  private state = {\n    done: 4,\n  };\n\n  async send(serverUrl: string, payload: Payload): Promise<Response | null> {\n    return new Promise((resolve, reject) => {\n      /* istanbul ignore if */\n      if (typeof XMLHttpRequest === 'undefined') {\n        reject(new Error('XHRTransport is not supported.'));\n      }\n\n      const xhr = new XMLHttpRequest();\n      xhr.open('POST', serverUrl, true);\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === this.state.done) {\n          try {\n            const responsePayload = xhr.responseText;\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const parsedResponsePayload: Record<string, any> = JSON.parse(responsePayload);\n            const result = this.buildResponse(parsedResponsePayload);\n            resolve(result);\n          } catch (e) {\n            reject(e);\n          }\n        }\n      };\n      xhr.setRequestHeader('Content-Type', 'application/json');\n      xhr.setRequestHeader('Accept', '*/*');\n      xhr.send(JSON.stringify(payload));\n    });\n  }\n}\n", "import { getGlobalScope } from '@amplitude/analytics-client-common';\nimport { BaseTransport } from '@amplitude/analytics-core';\nimport { Payload, Response, Transport } from '@amplitude/analytics-types';\n\nexport class SendBeaconTransport extends BaseTransport implements Transport {\n  async send(serverUrl: string, payload: Payload): Promise<Response | null> {\n    return new Promise((resolve, reject) => {\n      const globalScope = getGlobalScope();\n      /* istanbul ignore if */\n      if (!globalScope?.navigator.sendBeacon) {\n        throw new Error('SendBeaconTransport is not supported');\n      }\n      try {\n        const data = JSON.stringify(payload);\n        const success = globalScope.navigator.sendBeacon(serverUrl, JSON.stringify(payload));\n        if (success) {\n          return resolve(\n            this.buildResponse({\n              code: 200,\n              events_ingested: payload.events.length,\n              payload_size_bytes: data.length,\n              server_upload_time: Date.now(),\n            }),\n          );\n        }\n        return resolve(this.buildResponse({ code: 500 }));\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n}\n", "import { Storage, UserSession } from '@amplitude/analytics-types';\nimport { getOldCookieName } from '@amplitude/analytics-client-common';\n\nexport const parseLegacyCookies = async (\n  apiKey: string,\n  cookieStorage: Storage<UserSession>,\n  deleteLegacyCookies = true,\n): Promise<UserSession> => {\n  const cookieName = getOldCookieName(apiKey);\n  const cookies = await cookieStorage.getRaw(cookieName);\n  if (!cookies) {\n    return {\n      optOut: false,\n    };\n  }\n  if (deleteLegacyCookies) {\n    await cookieStorage.remove(cookieName);\n  }\n  const [deviceId, userId, optOut, sessionId, lastEventTime, lastEventId] = cookies.split('.');\n  return {\n    deviceId,\n    userId: decode(userId),\n    sessionId: parseTime(sessionId),\n    lastEventId: parseTime(lastEventId),\n    lastEventTime: parseTime(lastEventTime),\n    optOut: Boolean(optOut),\n  };\n};\n\nexport const parseTime = (num: string) => {\n  const integer = parseInt(num, 32);\n  if (isNaN(integer)) {\n    return undefined;\n  }\n  return integer;\n};\n\nexport const decode = (value?: string): string | undefined => {\n  if (!atob || !escape || !value) {\n    return undefined;\n  }\n  try {\n    return decodeURIComponent(escape(atob(value)));\n  } catch {\n    return undefined;\n  }\n};\n", "import { IdentityStorageType, ServerZoneType } from '@amplitude/analytics-types';\n\nexport const DEFAULT_EVENT_PREFIX = '[Amplitude]';\n\nexport const DEFAULT_PAGE_VIEW_EVENT = `${DEFAULT_EVENT_PREFIX} Page Viewed`;\nexport const DEFAULT_FORM_START_EVENT = `${DEFAULT_EVENT_PREFIX} Form Started`;\nexport const DEFAULT_FORM_SUBMIT_EVENT = `${DEFAULT_EVENT_PREFIX} Form Submitted`;\nexport const DEFAULT_FILE_DOWNLOAD_EVENT = `${DEFAULT_EVENT_PREFIX} File Downloaded`;\nexport const DEFAULT_SESSION_START_EVENT = 'session_start';\nexport const DEFAULT_SESSION_END_EVENT = 'session_end';\n\nexport const FILE_EXTENSION = `${DEFAULT_EVENT_PREFIX} File Extension`;\nexport const FILE_NAME = `${DEFAULT_EVENT_PREFIX} File Name`;\nexport const LINK_ID = `${DEFAULT_EVENT_PREFIX} Link ID`;\nexport const LINK_TEXT = `${DEFAULT_EVENT_PREFIX} Link Text`;\nexport const LINK_URL = `${DEFAULT_EVENT_PREFIX} Link URL`;\n\nexport const FORM_ID = `${DEFAULT_EVENT_PREFIX} Form ID`;\nexport const FORM_NAME = `${DEFAULT_EVENT_PREFIX} Form Name`;\nexport const FORM_DESTINATION = `${DEFAULT_EVENT_PREFIX} Form Destination`;\n\nexport const DEFAULT_IDENTITY_STORAGE: IdentityStorageType = 'cookie';\nexport const DEFAULT_SERVER_ZONE: ServerZoneType = 'US';\n", "import {\n  Event,\n  BrowserOptions,\n  BrowserConfig as IBrowserConfig,\n  DefaultTrackingOptions,\n  Storage,\n  TrackingOptions,\n  TransportType,\n  UserSession,\n  Logger as ILogger,\n  LogLevel,\n  Plan,\n  IngestionMetadata,\n  IdentityStorageType,\n  ServerZoneType,\n  OfflineDisabled,\n} from '@amplitude/analytics-types';\nimport { Config, Logger, MemoryStorage, UUID } from '@amplitude/analytics-core';\nimport { CookieStorage, getCookieName, FetchTransport, getQueryParams } from '@amplitude/analytics-client-common';\n\nimport { LocalStorage } from './storage/local-storage';\nimport { SessionStorage } from './storage/session-storage';\nimport { XHRTransport } from './transports/xhr';\nimport { SendBeaconTransport } from './transports/send-beacon';\nimport { parseLegacyCookies } from './cookie-migration';\nimport { CookieOptions } from '@amplitude/analytics-types/lib/esm/config/browser';\nimport { DEFAULT_IDENTITY_STORAGE, DEFAULT_SERVER_ZONE } from './constants';\nimport { AmplitudeBrowser } from './browser-client';\n\n// Exported for testing purposes only. Do not expose to public interface.\nexport class BrowserConfig extends Config implements IBrowserConfig {\n  protected _cookieStorage: Storage<UserSession>;\n  protected _deviceId?: string;\n  protected _lastEventId?: number;\n  protected _lastEventTime?: number;\n  protected _optOut = false;\n  protected _sessionId?: number;\n  protected _userId?: string;\n  protected _pageCounter?: number;\n  constructor(\n    public apiKey: string,\n    public appVersion?: string,\n    cookieStorage: Storage<UserSession> = new MemoryStorage(),\n    public cookieOptions: CookieOptions = {\n      domain: '',\n      expiration: 365,\n      sameSite: 'Lax' as const,\n      secure: false,\n      upgrade: true,\n    },\n    public defaultTracking?: boolean | DefaultTrackingOptions,\n    deviceId?: string,\n    public flushIntervalMillis: number = 1000,\n    public flushMaxRetries: number = 5,\n    public flushQueueSize: number = 30,\n    public identityStorage: IdentityStorageType = DEFAULT_IDENTITY_STORAGE,\n    public ingestionMetadata?: IngestionMetadata,\n    public instanceName?: string,\n    lastEventId?: number,\n    lastEventTime?: number,\n    public loggerProvider: ILogger = new Logger(),\n    public logLevel: LogLevel = LogLevel.Warn,\n    public minIdLength?: number,\n    public offline: boolean | typeof OfflineDisabled = false,\n    optOut = false,\n    public partnerId?: string,\n    public plan?: Plan,\n    public serverUrl: string = '',\n    public serverZone: ServerZoneType = DEFAULT_SERVER_ZONE,\n    sessionId?: number,\n    public sessionTimeout: number = 30 * 60 * 1000,\n    public storageProvider: Storage<Event[]> = new LocalStorage({ loggerProvider }),\n    public trackingOptions: Required<TrackingOptions> = {\n      ipAddress: true,\n      language: true,\n      platform: true,\n    },\n    public transport: 'fetch' | 'xhr' | 'beacon' = 'fetch',\n    public useBatch: boolean = false,\n    userId?: string,\n    pageCounter?: number,\n  ) {\n    super({ apiKey, storageProvider, transportProvider: createTransport(transport) });\n    this._cookieStorage = cookieStorage;\n    this.deviceId = deviceId;\n    this.lastEventId = lastEventId;\n    this.lastEventTime = lastEventTime;\n    this.optOut = optOut;\n    this.sessionId = sessionId;\n    this.pageCounter = pageCounter;\n    this.userId = userId;\n    this.loggerProvider.enable(this.logLevel);\n  }\n\n  get cookieStorage() {\n    return this._cookieStorage;\n  }\n\n  set cookieStorage(cookieStorage: Storage<UserSession>) {\n    if (this._cookieStorage !== cookieStorage) {\n      this._cookieStorage = cookieStorage;\n      this.updateStorage();\n    }\n  }\n\n  get deviceId() {\n    return this._deviceId;\n  }\n\n  set deviceId(deviceId: string | undefined) {\n    if (this._deviceId !== deviceId) {\n      this._deviceId = deviceId;\n      this.updateStorage();\n    }\n  }\n\n  get userId() {\n    return this._userId;\n  }\n\n  set userId(userId: string | undefined) {\n    if (this._userId !== userId) {\n      this._userId = userId;\n      this.updateStorage();\n    }\n  }\n\n  get sessionId() {\n    return this._sessionId;\n  }\n\n  set sessionId(sessionId: number | undefined) {\n    if (this._sessionId !== sessionId) {\n      this._sessionId = sessionId;\n      this.updateStorage();\n    }\n  }\n\n  get optOut() {\n    return this._optOut;\n  }\n\n  set optOut(optOut: boolean) {\n    if (this._optOut !== optOut) {\n      this._optOut = optOut;\n      this.updateStorage();\n    }\n  }\n\n  get lastEventTime() {\n    return this._lastEventTime;\n  }\n\n  set lastEventTime(lastEventTime: number | undefined) {\n    if (this._lastEventTime !== lastEventTime) {\n      this._lastEventTime = lastEventTime;\n      this.updateStorage();\n    }\n  }\n\n  get lastEventId() {\n    return this._lastEventId;\n  }\n\n  set lastEventId(lastEventId: number | undefined) {\n    if (this._lastEventId !== lastEventId) {\n      this._lastEventId = lastEventId;\n      this.updateStorage();\n    }\n  }\n\n  get pageCounter() {\n    return this._pageCounter;\n  }\n\n  set pageCounter(pageCounter: number | undefined) {\n    if (this._pageCounter !== pageCounter) {\n      this._pageCounter = pageCounter;\n      this.updateStorage();\n    }\n  }\n\n  private updateStorage() {\n    const cache = {\n      deviceId: this._deviceId,\n      userId: this._userId,\n      sessionId: this._sessionId,\n      optOut: this._optOut,\n      lastEventTime: this._lastEventTime,\n      lastEventId: this._lastEventId,\n      pageCounter: this._pageCounter,\n    };\n    void this.cookieStorage.set(getCookieName(this.apiKey), cache);\n  }\n}\n\nexport const useBrowserConfig = async (\n  apiKey: string,\n  options: BrowserOptions = {},\n  amplitudeInstance: AmplitudeBrowser,\n): Promise<IBrowserConfig> => {\n  // Step 1: Create identity storage instance\n  const identityStorage = options.identityStorage || DEFAULT_IDENTITY_STORAGE;\n  const cookieOptions = {\n    domain:\n      identityStorage !== DEFAULT_IDENTITY_STORAGE ? '' : options.cookieOptions?.domain ?? (await getTopLevelDomain()),\n    expiration: 365,\n    sameSite: 'Lax' as const,\n    secure: false,\n    upgrade: true,\n    ...options.cookieOptions,\n  };\n  const cookieStorage = createCookieStorage<UserSession>(options.identityStorage, cookieOptions);\n\n  // Step 1: Parse cookies using identity storage instance\n  const legacyCookies = await parseLegacyCookies(apiKey, cookieStorage, options.cookieOptions?.upgrade ?? true);\n  const previousCookies = await cookieStorage.get(getCookieName(apiKey));\n  const queryParams = getQueryParams();\n\n  // Step 3: Reconcile user identity\n  const deviceId =\n    options.deviceId ??\n    queryParams.ampDeviceId ??\n    queryParams.deviceId ??\n    previousCookies?.deviceId ??\n    legacyCookies.deviceId ??\n    UUID();\n  const lastEventId = previousCookies?.lastEventId ?? legacyCookies.lastEventId;\n  const lastEventTime = previousCookies?.lastEventTime ?? legacyCookies.lastEventTime;\n  const optOut = options.optOut ?? previousCookies?.optOut ?? legacyCookies.optOut;\n  const sessionId = previousCookies?.sessionId ?? legacyCookies.sessionId;\n  const userId = options.userId ?? previousCookies?.userId ?? legacyCookies.userId;\n  amplitudeInstance.previousSessionDeviceId = previousCookies?.deviceId ?? legacyCookies.deviceId;\n  amplitudeInstance.previousSessionUserId = previousCookies?.userId ?? legacyCookies.userId;\n\n  const trackingOptions = {\n    ipAddress: options.trackingOptions?.ipAddress ?? true,\n    language: options.trackingOptions?.language ?? true,\n    platform: options.trackingOptions?.platform ?? true,\n  };\n  const pageCounter = previousCookies?.pageCounter;\n\n  return new BrowserConfig(\n    apiKey,\n    options.appVersion,\n    cookieStorage,\n    cookieOptions,\n    options.defaultTracking,\n    deviceId,\n    options.flushIntervalMillis,\n    options.flushMaxRetries,\n    options.flushQueueSize,\n    identityStorage,\n    options.ingestionMetadata,\n    options.instanceName,\n    lastEventId,\n    lastEventTime,\n    options.loggerProvider,\n    options.logLevel,\n    options.minIdLength,\n    options.offline,\n    optOut,\n    options.partnerId,\n    options.plan,\n    options.serverUrl,\n    options.serverZone,\n    sessionId,\n    options.sessionTimeout,\n    options.storageProvider,\n    trackingOptions,\n    options.transport,\n    options.useBatch,\n    userId,\n    pageCounter,\n  );\n};\n\nexport const createCookieStorage = <T>(\n  identityStorage: IdentityStorageType = DEFAULT_IDENTITY_STORAGE,\n  cookieOptions: CookieOptions = {},\n) => {\n  switch (identityStorage) {\n    case 'localStorage':\n      return new LocalStorage<T>();\n    case 'sessionStorage':\n      return new SessionStorage<T>();\n    case 'none':\n      return new MemoryStorage<T>();\n    case 'cookie':\n    default:\n      return new CookieStorage<T>({\n        ...cookieOptions,\n        expirationDays: cookieOptions.expiration,\n      });\n  }\n};\n\nexport const createTransport = (transport?: TransportType) => {\n  if (transport === 'xhr') {\n    return new XHRTransport();\n  }\n  if (transport === 'beacon') {\n    return new SendBeaconTransport();\n  }\n  return new FetchTransport();\n};\n\nexport const getTopLevelDomain = async (url?: string) => {\n  if (\n    !(await new CookieStorage<number>().isEnabled()) ||\n    (!url && (typeof location === 'undefined' || !location.hostname))\n  ) {\n    return '';\n  }\n\n  const host = url ?? location.hostname;\n  const parts = host.split('.');\n  const levels = [];\n  const storageKey = 'AMP_TLDTEST';\n\n  for (let i = parts.length - 2; i >= 0; --i) {\n    levels.push(parts.slice(i).join('.'));\n  }\n  for (let i = 0; i < levels.length; i++) {\n    const domain = levels[i];\n    const options = { domain: '.' + domain };\n    const storage = new CookieStorage<number>(options);\n    await storage.set(storageKey, 1);\n    const value = await storage.get(storageKey);\n    if (value) {\n      await storage.remove(storageKey);\n      return '.' + domain;\n    }\n  }\n\n  return '';\n};\n", "export const omitUndefined = (input: Record<string, string | undefined>) => {\n  const obj: Record<string, string> = {};\n  for (const key in input) {\n    const val = input[key];\n    if (val) {\n      obj[key] = val;\n    }\n  }\n  return obj;\n};\n", "import { CampaignParser, getGlobalScope } from '@amplitude/analytics-client-common';\nimport {\n  BrowserClient,\n  BrowserConfig,\n  EnrichmentPlugin,\n  Event,\n  IdentifyOperation,\n  IdentifyUserProperties,\n  Logger,\n} from '@amplitude/analytics-types';\nimport { BASE_CAMPAIGN } from '@amplitude/analytics-client-common';\nimport { CreatePageViewTrackingPlugin, Options } from './typings/page-view-tracking';\nimport { omitUndefined } from './utils';\n\nexport const defaultPageViewEvent = '[Amplitude] Page Viewed';\n\nexport const pageViewTrackingPlugin: CreatePageViewTrackingPlugin = (options: Options = {}) => {\n  let amplitude: BrowserClient | undefined;\n  const globalScope = getGlobalScope();\n  let loggerProvider: Logger | undefined = undefined;\n  let pushState: undefined | ((data: any, unused: string, url?: string | URL | null) => void);\n  let localConfig: BrowserConfig;\n  const { trackOn, trackHistoryChanges, eventType = defaultPageViewEvent } = options;\n\n  const createPageViewEvent = async (): Promise<Event> => {\n    return {\n      event_type: eventType,\n      event_properties: {\n        ...(await getCampaignParams()),\n        '[Amplitude] Page Domain':\n          /* istanbul ignore next */ (typeof location !== 'undefined' && location.hostname) || '',\n        '[Amplitude] Page Location':\n          /* istanbul ignore next */ (typeof location !== 'undefined' && location.href) || '',\n        '[Amplitude] Page Path':\n          /* istanbul ignore next */ (typeof location !== 'undefined' && location.pathname) || '',\n        '[Amplitude] Page Title': /* istanbul ignore next */ (typeof document !== 'undefined' && document.title) || '',\n        '[Amplitude] Page URL':\n          /* istanbul ignore next */ (typeof location !== 'undefined' && location.href.split('?')[0]) || '',\n      },\n    };\n  };\n\n  const shouldTrackOnPageLoad = () => typeof trackOn === 'undefined' || (typeof trackOn === 'function' && trackOn());\n\n  /* istanbul ignore next */\n  let previousURL: string | null = typeof location !== 'undefined' ? location.href : null;\n\n  const trackHistoryPageView = async (): Promise<void> => {\n    const newURL = location.href;\n    const shouldTrackPageView =\n      shouldTrackHistoryPageView(trackHistoryChanges, newURL, previousURL || '') && shouldTrackOnPageLoad();\n    // Note: Update `previousURL` in the same clock tick as `shouldTrackHistoryPageView()`\n    // This was previously done after `amplitude?.track(await createPageViewEvent());` and\n    // causes a concurrency issue where app triggers `pushState` twice with the same URL target\n    // but `previousURL` is only updated after the second `pushState` producing two page viewed events\n    previousURL = newURL;\n\n    if (shouldTrackPageView) {\n      /* istanbul ignore next */\n      loggerProvider?.log('Tracking page view event');\n      amplitude?.track(await createPageViewEvent());\n    }\n  };\n\n  /* istanbul ignore next */\n  const trackHistoryPageViewWrapper = () => {\n    void trackHistoryPageView();\n  };\n\n  const plugin: EnrichmentPlugin = {\n    name: '@amplitude/plugin-page-view-tracking-browser',\n    type: 'enrichment',\n\n    setup: async (config: BrowserConfig, client: BrowserClient) => {\n      amplitude = client;\n      localConfig = config;\n\n      loggerProvider = config.loggerProvider;\n      loggerProvider.log('Installing @amplitude/plugin-page-view-tracking-browser');\n\n      if (globalScope) {\n        globalScope.addEventListener('popstate', trackHistoryPageViewWrapper);\n\n        // Save reference to original push state, to be used in teardown\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        pushState = globalScope.history.pushState;\n\n        /* istanbul ignore next */\n        // There is no global browser listener for changes to history, so we have\n        // to modify pushState directly.\n        // https://stackoverflow.com/a/64927639\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        globalScope.history.pushState = new Proxy(globalScope.history.pushState, {\n          apply: (target, thisArg, [state, unused, url]) => {\n            target.apply(thisArg, [state, unused, url]);\n            void trackHistoryPageView();\n          },\n        });\n      }\n\n      if (shouldTrackOnPageLoad()) {\n        loggerProvider.log('Tracking page view event');\n\n        amplitude.track(await createPageViewEvent());\n      }\n    },\n\n    execute: async (event: Event) => {\n      if (trackOn === 'attribution' && isCampaignEvent(event)) {\n        /* istanbul ignore next */ // loggerProvider should be defined by the time execute is invoked\n        loggerProvider?.log('Enriching campaign event to page view event with campaign parameters');\n        const pageViewEvent = await createPageViewEvent();\n        event.event_type = pageViewEvent.event_type;\n        event.event_properties = {\n          ...event.event_properties,\n          ...pageViewEvent.event_properties,\n        };\n      }\n\n      // Update the pageCounter for the page view event\n      if (localConfig && event.event_type === eventType) {\n        localConfig.pageCounter = !localConfig.pageCounter ? 1 : localConfig.pageCounter + 1;\n        event.event_properties = {\n          ...event.event_properties,\n          '[Amplitude] Page Counter': localConfig.pageCounter,\n        };\n      }\n      return event;\n    },\n\n    teardown: async () => {\n      if (globalScope) {\n        globalScope.removeEventListener('popstate', trackHistoryPageViewWrapper);\n        if (pushState) {\n          globalScope.history.pushState = pushState;\n        }\n      }\n    },\n  };\n  return plugin;\n};\n\nconst getCampaignParams = async () => omitUndefined(await new CampaignParser().parse());\n\nconst isCampaignEvent = (event: Event) => {\n  if (event.event_type === '$identify' && event.user_properties) {\n    const properties = event.user_properties as IdentifyUserProperties;\n    const $set = properties[IdentifyOperation.SET] || {};\n    const $unset = properties[IdentifyOperation.UNSET] || {};\n    const userProperties = [...Object.keys($set), ...Object.keys($unset)];\n    return Object.keys(BASE_CAMPAIGN).every((value) => userProperties.includes(value));\n  }\n  return false;\n};\n\nexport const shouldTrackHistoryPageView = (\n  trackingOption: Options['trackHistoryChanges'],\n  newURL: string,\n  oldURL: string,\n): boolean => {\n  switch (trackingOption) {\n    case 'pathOnly':\n      return newURL.split('?')[0] !== oldURL.split('?')[0];\n    default:\n      return newURL !== oldURL;\n  }\n};\n", "import { BrowserClient, Event, EnrichmentPlugin } from '@amplitude/analytics-types';\nimport {\n  DEFAULT_FORM_START_EVENT,\n  DEFAULT_FORM_SUBMIT_EVENT,\n  FORM_ID,\n  FORM_NAME,\n  FORM_DESTINATION,\n} from '../constants';\nimport { BrowserConfig } from '../config';\n\ninterface EventListener {\n  element: Element;\n  type: 'change' | 'submit';\n  handler: () => void;\n}\n\nexport const formInteractionTracking = (): EnrichmentPlugin => {\n  let observer: MutationObserver | undefined;\n  let eventListeners: EventListener[] = [];\n\n  const addEventListener = (element: Element, type: 'change' | 'submit', handler: () => void) => {\n    element.addEventListener(type, handler);\n    eventListeners.push({\n      element,\n      type,\n      handler,\n    });\n  };\n\n  const removeClickListeners = () => {\n    eventListeners.forEach(({ element, type, handler }) => {\n      /* istanbul ignore next */\n      element?.removeEventListener(type, handler);\n    });\n    eventListeners = [];\n  };\n\n  const name = '@amplitude/plugin-form-interaction-tracking-browser';\n  const type = 'enrichment';\n  const setup = async (config: BrowserConfig, amplitude: BrowserClient) => {\n    // The form interaction plugin observes changes in the dom. For this to work correctly, the observer can only be setup\n    // after the body is built. When Amplitud gets initialized in a script tag, the body tag is still unavailable. So register this\n    // only after the window is loaded\n    // eslint-disable-next-line no-restricted-globals\n    window.addEventListener('load', function () {\n      /* istanbul ignore if */\n      if (!amplitude) {\n        // TODO: Add required minimum version of @amplitude/analytics-browser\n        config.loggerProvider.warn(\n          'Form interaction tracking requires a later version of @amplitude/analytics-browser. Form interaction events are not tracked.',\n        );\n        return;\n      }\n\n      /* istanbul ignore if */\n      if (typeof document === 'undefined') {\n        return;\n      }\n\n      const addFormInteractionListener = (form: HTMLFormElement) => {\n        let hasFormChanged = false;\n\n        addEventListener(form, 'change', () => {\n          if (!hasFormChanged) {\n            amplitude.track(DEFAULT_FORM_START_EVENT, {\n              [FORM_ID]: stringOrUndefined(form.id),\n              [FORM_NAME]: stringOrUndefined(form.name),\n              [FORM_DESTINATION]: form.action,\n            });\n          }\n          hasFormChanged = true;\n        });\n\n        addEventListener(form, 'submit', () => {\n          if (!hasFormChanged) {\n            amplitude.track(DEFAULT_FORM_START_EVENT, {\n              [FORM_ID]: stringOrUndefined(form.id),\n              [FORM_NAME]: stringOrUndefined(form.name),\n              [FORM_DESTINATION]: form.action,\n            });\n          }\n\n          amplitude.track(DEFAULT_FORM_SUBMIT_EVENT, {\n            [FORM_ID]: stringOrUndefined(form.id),\n            [FORM_NAME]: stringOrUndefined(form.name),\n            [FORM_DESTINATION]: form.action,\n          });\n          hasFormChanged = false;\n        });\n      };\n\n      // Adds listener to existing anchor tags\n      const forms = Array.from(document.getElementsByTagName('form'));\n      forms.forEach(addFormInteractionListener);\n\n      // Adds listener to anchor tags added after initial load\n      /* istanbul ignore else */\n      if (typeof MutationObserver !== 'undefined') {\n        observer = new MutationObserver((mutations) => {\n          mutations.forEach((mutation) => {\n            mutation.addedNodes.forEach((node) => {\n              if (node.nodeName === 'FORM') {\n                addFormInteractionListener(node as HTMLFormElement);\n              }\n              if ('querySelectorAll' in node && typeof node.querySelectorAll === 'function') {\n                Array.from(node.querySelectorAll('form') as HTMLFormElement[]).map(addFormInteractionListener);\n              }\n            });\n          });\n        });\n\n        observer.observe(document.body, {\n          subtree: true,\n          childList: true,\n        });\n      }\n    });\n  };\n  const execute = async (event: Event) => event;\n  const teardown = async () => {\n    observer?.disconnect();\n    removeClickListeners();\n  };\n\n  return {\n    name,\n    type,\n    setup,\n    execute,\n    teardown,\n  };\n};\n\nexport const stringOrUndefined = <T>(name: T): T extends string ? string : undefined => {\n  /* istanbul ignore if */\n  if (typeof name !== 'string') {\n    // We found instances where the value of `name` is an Element and not a string.\n    // Elements may have circular references and would throw an error when passed to `JSON.stringify(...)`.\n    // If a non-string value is seen, assume there is no value.\n    return undefined as T extends string ? string : undefined;\n  }\n\n  return name as T extends string ? string : undefined;\n};\n", "import { BrowserClient, Event, EnrichmentPlugin } from '@amplitude/analytics-types';\nimport { DEFAULT_FILE_DOWNLOAD_EVENT, FILE_EXTENSION, FILE_NAME, LINK_ID, LINK_TEXT, LINK_URL } from '../constants';\nimport { BrowserConfig } from '../config';\n\ninterface EventListener {\n  element: Element;\n  type: 'click';\n  handler: () => void;\n}\n\nexport const fileDownloadTracking = (): EnrichmentPlugin => {\n  let observer: MutationObserver | undefined;\n  let eventListeners: EventListener[] = [];\n  const addEventListener = (element: Element, type: 'click', handler: () => void) => {\n    element.addEventListener(type, handler);\n    eventListeners.push({\n      element,\n      type,\n      handler,\n    });\n  };\n  const removeClickListeners = () => {\n    eventListeners.forEach(({ element, type, handler }) => {\n      /* istanbul ignore next */\n      element?.removeEventListener(type, handler);\n    });\n    eventListeners = [];\n  };\n\n  const name = '@amplitude/plugin-file-download-tracking-browser';\n  const type = 'enrichment';\n  const setup = async (config: BrowserConfig, amplitude: BrowserClient) => {\n    // The form interaction plugin observes changes in the dom. For this to work correctly, the observer can only be setup\n    // after the body is built. When Amplitud gets initialized in a script tag, the body tag is still unavailable. So register this\n    // only after the window is loaded\n    // eslint-disable-next-line no-restricted-globals\n    window.addEventListener('load', function () {\n      /* istanbul ignore if */\n      if (!amplitude) {\n        // TODO: Add required minimum version of @amplitude/analytics-browser\n        config.loggerProvider.warn(\n          'File download tracking requires a later version of @amplitude/analytics-browser. File download events are not tracked.',\n        );\n        return;\n      }\n\n      /* istanbul ignore if */\n      if (typeof document === 'undefined') {\n        return;\n      }\n\n      const addFileDownloadListener = (a: HTMLAnchorElement) => {\n        let url: URL;\n        try {\n          // eslint-disable-next-line no-restricted-globals\n          url = new URL(a.href, window.location.href);\n        } catch {\n          /* istanbul ignore next */\n          return;\n        }\n        const result = ext.exec(url.href);\n        const fileExtension = result?.[1];\n\n        if (fileExtension) {\n          addEventListener(a, 'click', () => {\n            if (fileExtension) {\n              amplitude.track(DEFAULT_FILE_DOWNLOAD_EVENT, {\n                [FILE_EXTENSION]: fileExtension,\n                [FILE_NAME]: url.pathname,\n                [LINK_ID]: a.id,\n                [LINK_TEXT]: a.text,\n                [LINK_URL]: a.href,\n              });\n            }\n          });\n        }\n      };\n\n      const ext =\n        /\\.(pdf|xlsx?|docx?|txt|rtf|csv|exe|key|pp(s|t|tx)|7z|pkg|rar|gz|zip|avi|mov|mp4|mpe?g|wmv|midi?|mp3|wav|wma)$/;\n\n      // Adds listener to existing anchor tags\n      const links = Array.from(document.getElementsByTagName('a'));\n      links.forEach(addFileDownloadListener);\n\n      // Adds listener to anchor tags added after initial load\n      /* istanbul ignore else */\n      if (typeof MutationObserver !== 'undefined') {\n        observer = new MutationObserver((mutations) => {\n          mutations.forEach((mutation) => {\n            mutation.addedNodes.forEach((node) => {\n              if (node.nodeName === 'A') {\n                addFileDownloadListener(node as HTMLAnchorElement);\n              }\n              if ('querySelectorAll' in node && typeof node.querySelectorAll === 'function') {\n                Array.from(node.querySelectorAll('a') as HTMLAnchorElement[]).map(addFileDownloadListener);\n              }\n            });\n          });\n        });\n\n        observer.observe(document.body, {\n          subtree: true,\n          childList: true,\n        });\n      }\n    });\n  };\n  const execute = async (event: Event) => event;\n  const teardown = async () => {\n    observer?.disconnect();\n    removeClickListeners();\n  };\n\n  return {\n    name,\n    type,\n    setup,\n    execute,\n    teardown,\n  };\n};\n", "import { BrowserConfig } from '@amplitude/analytics-types';\n\nlet notified = false;\n\nexport const detNotify = (config: BrowserConfig): void => {\n  if (notified || config.defaultTracking !== undefined) {\n    return;\n  }\n\n  const message = `\\`options.defaultTracking\\` is set to undefined. This implicitly configures your Amplitude instance to track Page Views, Sessions, File Downloads, and Form Interactions. You can suppress this warning by explicitly setting a value to \\`options.defaultTracking\\`. The value must either be a boolean, to enable and disable all default events, or an object, for advanced configuration. For example:\n\namplitude.init(<YOUR_API_KEY>, {\n  defaultTracking: true,\n});\n\nVisit https://www.docs.developers.amplitude.com/data/sdks/browser-2/#tracking-default-events for more details.`;\n  config.loggerProvider.warn(message);\n  notified = true;\n};\n\n/**\n * @private\n * This function is meant for testing purposes only\n */\nexport const resetNotify = () => {\n  notified = false;\n};\n", "import { getGlobalScope } from '@amplitude/analytics-client-common';\nimport { BeforePlugin, BrowserClient } from '@amplitude/analytics-types';\nimport { BrowserConfig } from 'src/config';\n\ninterface EventListener {\n  type: 'online' | 'offline';\n  handler: () => void;\n}\n\nexport const networkConnectivityCheckerPlugin = (): BeforePlugin => {\n  const name = '@amplitude/plugin-network-checker-browser';\n  const type = 'before' as const;\n  const globalScope = getGlobalScope();\n  let eventListeners: EventListener[] = [];\n\n  const addNetworkListener = (type: 'online' | 'offline', handler: () => void) => {\n    if (globalScope) {\n      globalScope.addEventListener(type, handler);\n      eventListeners.push({\n        type,\n        handler,\n      });\n    }\n  };\n\n  const removeNetworkListeners = () => {\n    eventListeners.forEach(({ type, handler }) => {\n      if (globalScope) {\n        globalScope.removeEventListener(type, handler);\n      }\n    });\n    eventListeners = [];\n  };\n\n  const setup = async (config: BrowserConfig, amplitude: BrowserClient) => {\n    config.offline = !navigator.onLine;\n\n    addNetworkListener('online', () => {\n      config.loggerProvider.debug('Network connectivity changed to online.');\n      config.offline = false;\n      // Flush immediately will cause ERR_NETWORK_CHANGED\n      setTimeout(() => {\n        amplitude.flush();\n      }, config.flushIntervalMillis);\n    });\n\n    addNetworkListener('offline', () => {\n      config.loggerProvider.debug('Network connectivity changed to offline.');\n      config.offline = true;\n    });\n  };\n\n  const teardown = async () => {\n    removeNetworkListeners();\n  };\n\n  return {\n    name,\n    type,\n    setup,\n    teardown,\n  };\n};\n", "import { AmplitudeCore, Destination, Identify, returnWrapper, Revenue, UUID } from '@amplitude/analytics-core';\nimport {\n  getAnalyticsConnector,\n  getAttributionTrackingConfig,\n  getPageViewTrackingConfig,\n  IdentityEventSender,\n  isAttributionTrackingEnabled,\n  isSessionTrackingEnabled,\n  isFileDownloadTrackingEnabled,\n  isFormInteractionTrackingEnabled,\n  setConnectorDeviceId,\n  setConnectorUserId,\n  isNewSession,\n  isPageViewTrackingEnabled,\n  WebAttribution,\n  getQueryParams,\n} from '@amplitude/analytics-client-common';\nimport {\n  BrowserClient,\n  BrowserConfig,\n  BrowserOptions,\n  Event,\n  EventOptions,\n  Identify as IIdentify,\n  Revenue as IRevenue,\n  TransportType,\n  OfflineDisabled,\n  Result,\n} from '@amplitude/analytics-types';\nimport { convertProxyObjectToRealObject, isInstanceProxy } from './utils/snippet-helper';\nimport { Context } from './plugins/context';\nimport { useBrowserConfig, createTransport } from './config';\nimport { pageViewTrackingPlugin } from '@amplitude/plugin-page-view-tracking-browser';\nimport { formInteractionTracking } from './plugins/form-interaction-tracking';\nimport { fileDownloadTracking } from './plugins/file-download-tracking';\nimport { DEFAULT_SESSION_END_EVENT, DEFAULT_SESSION_START_EVENT } from './constants';\nimport { detNotify } from './det-notification';\nimport { networkConnectivityCheckerPlugin } from './plugins/network-connectivity-checker';\n\nexport class AmplitudeBrowser extends AmplitudeCore implements BrowserClient {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  config: BrowserConfig;\n  previousSessionDeviceId: string | undefined;\n  previousSessionUserId: string | undefined;\n  webAttribution: WebAttribution | undefined;\n\n  init(apiKey = '', userIdOrOptions?: string | BrowserOptions, maybeOptions?: BrowserOptions) {\n    let userId: string | undefined;\n    let options: BrowserOptions | undefined;\n\n    if (arguments.length > 2) {\n      userId = userIdOrOptions as string | undefined;\n      options = maybeOptions;\n    } else {\n      if (typeof userIdOrOptions === 'string') {\n        userId = userIdOrOptions;\n        options = undefined;\n      } else {\n        userId = userIdOrOptions?.userId;\n        options = userIdOrOptions;\n      }\n    }\n    return returnWrapper(this._init({ ...options, userId, apiKey }));\n  }\n  protected async _init(options: BrowserOptions & { apiKey: string }) {\n    // Step 1: Block concurrent initialization\n    if (this.initializing) {\n      return;\n    }\n    this.initializing = true;\n\n    // Step 2: Create browser config\n    const browserOptions = await useBrowserConfig(options.apiKey, options, this);\n    await super._init(browserOptions);\n\n    // Add web attribution plugin\n    if (isAttributionTrackingEnabled(this.config.defaultTracking)) {\n      const attributionTrackingOptions = getAttributionTrackingConfig(this.config);\n      this.webAttribution = new WebAttribution(attributionTrackingOptions, this.config);\n      // Fetch the current campaign, check if need to track web attribution later\n      await this.webAttribution.init();\n    }\n\n    // Step 3: Set session ID\n    // Priority 1: `options.sessionId`\n    // Priority 2: sessionId from url if it's Number\n    // Priority 3: last known sessionId from user identity storage\n    // Default: `Date.now()`\n    // Session ID is handled differently than device ID and user ID due to session events\n    const queryParams = getQueryParams();\n    const querySessionId = Number.isNaN(Number(queryParams.ampSessionId))\n      ? undefined\n      : Number(queryParams.ampSessionId);\n    this.setSessionId(options.sessionId ?? querySessionId ?? this.config.sessionId ?? Date.now());\n\n    // Set up the analytics connector to integrate with the experiment SDK.\n    // Send events from the experiment SDK and forward identifies to the\n    // identity store.\n    const connector = getAnalyticsConnector(options.instanceName);\n    connector.identityStore.setIdentity({\n      userId: this.config.userId,\n      deviceId: this.config.deviceId,\n    });\n\n    // Step 4: Install plugins\n    // Do not track any events before this\n    if (this.config.offline !== OfflineDisabled) {\n      await this.add(networkConnectivityCheckerPlugin()).promise;\n    }\n    await this.add(new Destination()).promise;\n    await this.add(new Context()).promise;\n    await this.add(new IdentityEventSender()).promise;\n\n    // Notify if DET is enabled\n    detNotify(this.config);\n\n    if (isFileDownloadTrackingEnabled(this.config.defaultTracking)) {\n      await this.add(fileDownloadTracking()).promise;\n    }\n\n    if (isFormInteractionTrackingEnabled(this.config.defaultTracking)) {\n      await this.add(formInteractionTracking()).promise;\n    }\n\n    // Add page view plugin\n    if (isPageViewTrackingEnabled(this.config.defaultTracking)) {\n      await this.add(pageViewTrackingPlugin(getPageViewTrackingConfig(this.config))).promise;\n    }\n\n    this.initializing = false;\n\n    // Step 6: Run queued dispatch functions\n    await this.runQueuedFunctions('dispatchQ');\n\n    // Step 7: Add the event receiver after running remaining queued functions.\n    connector.eventBridge.setEventReceiver((event) => {\n      void this.track(event.eventType, event.eventProperties);\n    });\n  }\n\n  getUserId() {\n    return this.config?.userId;\n  }\n\n  setUserId(userId: string | undefined) {\n    if (!this.config) {\n      this.q.push(this.setUserId.bind(this, userId));\n      return;\n    }\n    if (userId !== this.config.userId || userId === undefined) {\n      this.config.userId = userId;\n      setConnectorUserId(userId, this.config.instanceName);\n    }\n  }\n\n  getDeviceId() {\n    return this.config?.deviceId;\n  }\n\n  setDeviceId(deviceId: string) {\n    if (!this.config) {\n      this.q.push(this.setDeviceId.bind(this, deviceId));\n      return;\n    }\n    this.config.deviceId = deviceId;\n    setConnectorDeviceId(deviceId, this.config.instanceName);\n  }\n\n  reset() {\n    this.setDeviceId(UUID());\n    this.setUserId(undefined);\n  }\n\n  getSessionId() {\n    return this.config?.sessionId;\n  }\n\n  setSessionId(sessionId: number) {\n    const promises: Promise<Result>[] = [];\n    if (!this.config) {\n      this.q.push(this.setSessionId.bind(this, sessionId));\n      return returnWrapper(Promise.resolve());\n    }\n    // Prevents starting a new session with the same session ID\n    if (sessionId === this.config.sessionId) {\n      return returnWrapper(Promise.resolve());\n    }\n\n    const previousSessionId = this.getSessionId();\n    const lastEventTime = this.config.lastEventTime;\n    let lastEventId = this.config.lastEventId ?? -1;\n\n    this.config.sessionId = sessionId;\n    this.config.lastEventTime = undefined;\n    this.config.pageCounter = 0;\n\n    if (isSessionTrackingEnabled(this.config.defaultTracking)) {\n      if (previousSessionId && lastEventTime) {\n        promises.push(\n          this.track(DEFAULT_SESSION_END_EVENT, undefined, {\n            device_id: this.previousSessionDeviceId,\n            event_id: ++lastEventId,\n            session_id: previousSessionId,\n            time: lastEventTime + 1,\n            user_id: this.previousSessionUserId,\n          }).promise,\n        );\n      }\n      this.config.lastEventTime = this.config.sessionId;\n    }\n\n    // Fire web attribution event when enable webAttribution tracking\n    // 1. has new campaign (call setSessionId from init function)\n    // 2. or shouldTrackNewCampaign (call setSessionId from async process(event) when there has new campaign and resetSessionOnNewCampaign = true )\n    const isCampaignEventTracked = this.trackCampaignEventIfNeeded(++lastEventId, promises);\n\n    if (isSessionTrackingEnabled(this.config.defaultTracking)) {\n      promises.push(\n        this.track(DEFAULT_SESSION_START_EVENT, undefined, {\n          event_id: isCampaignEventTracked ? ++lastEventId : lastEventId,\n          session_id: this.config.sessionId,\n          time: this.config.lastEventTime,\n        }).promise,\n      );\n    }\n\n    this.previousSessionDeviceId = this.config.deviceId;\n    this.previousSessionUserId = this.config.userId;\n    return returnWrapper(Promise.all(promises));\n  }\n\n  extendSession() {\n    if (!this.config) {\n      this.q.push(this.extendSession.bind(this));\n      return;\n    }\n    this.config.lastEventTime = Date.now();\n  }\n\n  setTransport(transport: TransportType) {\n    if (!this.config) {\n      this.q.push(this.setTransport.bind(this, transport));\n      return;\n    }\n    this.config.transportProvider = createTransport(transport);\n  }\n\n  identify(identify: IIdentify, eventOptions?: EventOptions) {\n    if (isInstanceProxy(identify)) {\n      const queue = identify._q;\n      identify._q = [];\n      identify = convertProxyObjectToRealObject(new Identify(), queue);\n    }\n    if (eventOptions?.user_id) {\n      this.setUserId(eventOptions.user_id);\n    }\n    if (eventOptions?.device_id) {\n      this.setDeviceId(eventOptions.device_id);\n    }\n    return super.identify(identify, eventOptions);\n  }\n\n  groupIdentify(groupType: string, groupName: string | string[], identify: IIdentify, eventOptions?: EventOptions) {\n    if (isInstanceProxy(identify)) {\n      const queue = identify._q;\n      identify._q = [];\n      identify = convertProxyObjectToRealObject(new Identify(), queue);\n    }\n    return super.groupIdentify(groupType, groupName, identify, eventOptions);\n  }\n\n  revenue(revenue: IRevenue, eventOptions?: EventOptions) {\n    if (isInstanceProxy(revenue)) {\n      const queue = revenue._q;\n      revenue._q = [];\n      revenue = convertProxyObjectToRealObject(new Revenue(), queue);\n    }\n    return super.revenue(revenue, eventOptions);\n  }\n\n  private trackCampaignEventIfNeeded(lastEventId?: number, promises?: Promise<Result>[]) {\n    if (!this.webAttribution || !this.webAttribution.shouldTrackNewCampaign) {\n      return false;\n    }\n\n    const campaignEvent = this.webAttribution.generateCampaignEvent(lastEventId);\n    if (promises) {\n      promises.push(this.track(campaignEvent).promise);\n    } else {\n      this.track(campaignEvent);\n    }\n    this.config.loggerProvider.log('Tracking attribution.');\n    return true;\n  }\n\n  async process(event: Event) {\n    const currentTime = Date.now();\n    const isEventInNewSession = isNewSession(this.config.sessionTimeout, this.config.lastEventTime);\n    const shouldSetSessionIdOnNewCampaign =\n      this.webAttribution && this.webAttribution.shouldSetSessionIdOnNewCampaign();\n\n    if (\n      event.event_type !== DEFAULT_SESSION_START_EVENT &&\n      event.event_type !== DEFAULT_SESSION_END_EVENT &&\n      (!event.session_id || event.session_id === this.getSessionId())\n    ) {\n      if (isEventInNewSession || shouldSetSessionIdOnNewCampaign) {\n        this.setSessionId(currentTime);\n        if (shouldSetSessionIdOnNewCampaign) {\n          this.config.loggerProvider.log('Created a new session for new campaign.');\n        }\n      } else if (!isEventInNewSession) {\n        // Web attribution should be tracked during the middle of a session\n        // if there has been a chance in the campaign information.\n        this.trackCampaignEventIfNeeded();\n      }\n    }\n\n    return super.process(event);\n  }\n}\n", "import { debugWrapper, getClientLogConfig, getClientStates } from '@amplitude/analytics-core';\nimport { BrowserClient } from '@amplitude/analytics-types';\nimport { AmplitudeBrowser } from './browser-client';\n\nexport const createInstance = (): BrowserClient => {\n  const client = new AmplitudeBrowser();\n  return {\n    init: debugWrapper(\n      client.init.bind(client),\n      'init',\n      getClientLogConfig(client),\n      getClientStates(client, ['config']),\n    ),\n    add: debugWrapper(\n      client.add.bind(client),\n      'add',\n      getClientLogConfig(client),\n      getClientStates(client, ['config.apiKey', 'timeline.plugins']),\n    ),\n    remove: debugWrapper(\n      client.remove.bind(client),\n      'remove',\n      getClientLogConfig(client),\n      getClientStates(client, ['config.apiKey', 'timeline.plugins']),\n    ),\n    track: debugWrapper(\n      client.track.bind(client),\n      'track',\n      getClientLogConfig(client),\n      getClientStates(client, ['config.apiKey', 'timeline.queue.length']),\n    ),\n    logEvent: debugWrapper(\n      client.logEvent.bind(client),\n      'logEvent',\n      getClientLogConfig(client),\n      getClientStates(client, ['config.apiKey', 'timeline.queue.length']),\n    ),\n    identify: debugWrapper(\n      client.identify.bind(client),\n      'identify',\n      getClientLogConfig(client),\n      getClientStates(client, ['config.apiKey', 'timeline.queue.length']),\n    ),\n    groupIdentify: debugWrapper(\n      client.groupIdentify.bind(client),\n      'groupIdentify',\n      getClientLogConfig(client),\n      getClientStates(client, ['config.apiKey', 'timeline.queue.length']),\n    ),\n    setGroup: debugWrapper(\n      client.setGroup.bind(client),\n      'setGroup',\n      getClientLogConfig(client),\n      getClientStates(client, ['config.apiKey', 'timeline.queue.length']),\n    ),\n    revenue: debugWrapper(\n      client.revenue.bind(client),\n      'revenue',\n      getClientLogConfig(client),\n      getClientStates(client, ['config.apiKey', 'timeline.queue.length']),\n    ),\n    flush: debugWrapper(\n      client.flush.bind(client),\n      'flush',\n      getClientLogConfig(client),\n      getClientStates(client, ['config.apiKey', 'timeline.queue.length']),\n    ),\n    getUserId: debugWrapper(\n      client.getUserId.bind(client),\n      'getUserId',\n      getClientLogConfig(client),\n      getClientStates(client, ['config', 'config.userId']),\n    ),\n    setUserId: debugWrapper(\n      client.setUserId.bind(client),\n      'setUserId',\n      getClientLogConfig(client),\n      getClientStates(client, ['config', 'config.userId']),\n    ),\n    getDeviceId: debugWrapper(\n      client.getDeviceId.bind(client),\n      'getDeviceId',\n      getClientLogConfig(client),\n      getClientStates(client, ['config', 'config.deviceId']),\n    ),\n    setDeviceId: debugWrapper(\n      client.setDeviceId.bind(client),\n      'setDeviceId',\n      getClientLogConfig(client),\n      getClientStates(client, ['config', 'config.deviceId']),\n    ),\n    reset: debugWrapper(\n      client.reset.bind(client),\n      'reset',\n      getClientLogConfig(client),\n      getClientStates(client, ['config', 'config.userId', 'config.deviceId']),\n    ),\n    getSessionId: debugWrapper(\n      client.getSessionId.bind(client),\n      'getSessionId',\n      getClientLogConfig(client),\n      getClientStates(client, ['config']),\n    ),\n    setSessionId: debugWrapper(\n      client.setSessionId.bind(client),\n      'setSessionId',\n      getClientLogConfig(client),\n      getClientStates(client, ['config']),\n    ),\n    extendSession: debugWrapper(\n      client.extendSession.bind(client),\n      'extendSession',\n      getClientLogConfig(client),\n      getClientStates(client, ['config']),\n    ),\n    setOptOut: debugWrapper(\n      client.setOptOut.bind(client),\n      'setOptOut',\n      getClientLogConfig(client),\n      getClientStates(client, ['config']),\n    ),\n    setTransport: debugWrapper(\n      client.setTransport.bind(client),\n      'setTransport',\n      getClientLogConfig(client),\n      getClientStates(client, ['config']),\n    ),\n  };\n};\n\nexport default createInstance();\n", "/* eslint-disable @typescript-eslint/unbound-method */\nimport client from './browser-client-factory';\nexport { createInstance } from './browser-client-factory';\nexport const {\n  add,\n  extendSession,\n  flush,\n  getDeviceId,\n  getSessionId,\n  getUserId,\n  groupIdentify,\n  identify,\n  init,\n  logEvent,\n  remove,\n  reset,\n  revenue,\n  setDeviceId,\n  setGroup,\n  setOptOut,\n  setSessionId,\n  setTransport,\n  setUserId,\n  track,\n} = client;\nexport { runQueuedFunctions } from './utils/snippet-helper';\nexport { Revenue, Identify } from '@amplitude/analytics-core';\nexport * as Types from '@amplitude/analytics-types';\n"],
  "mappings": "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",
  "names": ["IdentifyOperation", "RevenueProperty", "SpecialEventType", "LogLevel", "ServerZone", "Status", "Timeline", "plugin", "e", "_a", "_b", "Identify", "identify", "groupIdentify", "revenue", "AmplitudeCore", "identify", "revenue", "Revenue", "revenue", "Logger", "Config", "Destination", "_a", "MemoryStorage", "BaseTransport", "CampaignParser", "CampaignTracker", "identify", "isNewSession", "domainWithoutSubdomain", "isNewSession", "identify", "WebAttribution", "CookieStorage", "FetchTransport", "ApplicationContextProviderImpl", "EventBridgeImpl", "__assign", "IdentityStoreImpl", "self", "AnalyticsConnector", "IdentityEventSender", "getLanguage", "Context", "getLanguage", "BrowserStorage", "LocalStorage", "SessionStorage", "XHRTransport", "SendBeaconTransport", "BrowserConfig", "_a", "_b", "type", "_a", "type", "_a", "type", "AmplitudeBrowser", "identify", "revenue"]
}
